{
    "version": "https://jsonfeed.org/version/1",
    "title": "Guto@Site",
    "description": "",
    "home_page_url": "https://gutocarvalho.net",
    "feed_url": "https://gutocarvalho.net/feed.json",
    "user_comment": "",
    "author": {
        "name": "Guto Carvalho"
    },
    "items": [
        {
            "id": "https://gutocarvalho.net/meus-pensamentos-sobre-o-manifesto-tech/",
            "url": "https://gutocarvalho.net/meus-pensamentos-sobre-o-manifesto-tech/",
            "title": "Meus pensamentos sobre o manifesto tech",
            "summary": "Vejo que o pessoal nas redes tem debatido de forma intensa o&hellip;",
            "content_html": "<p>Vejo que o pessoal nas redes tem debatido de forma intensa o manifesto tech, alguns defendendo, outros criticando, algo bem normal, como tudo na vida.</p>\n<p>Acompanhando as redes, principalmente o twitter e telegram vejo que existe muita coisa interessante nos dois lados da conversa.</p>\n<p>Quer saber o eu que penso sobre isso tudo?</p>\n<p>Bora lá.</p>\n<hr>\n<p>Antes de mais nada, me siga no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a> e acompanhe meus posts sobre Cloud Native e CI/CD.</p>\n<p>Aproveite e siga também a <a href=\"https://twitter.com/CDeliveryFdn\">CD Foundation</a> e a <a href=\"https://twitter.com/cloudnativefdn\">Cloud Native Foundation</a>.</p>\n<hr>\n<h2 id=\"precisamos-considerar-o-momento\">Precisamos considerar o momento</h2>\n<p>O manifesto chega no mesmo momento que está dificil reter e contratar talentos, coincidência ou não.</p>\n<p>E reforço sobre esse momento, empresas estão com muita dificuldade de contratar, principalmente profissionais experientes. Algumas estão entrando em desespero porque não tem equipe para entregar o que já foi vendido para o ano.</p>\n<p>Empresas estão com muito dificuldade de reter os mais experientes, o assédio no linkedin e em outras redes sociais profissionais está acima do normal.</p>\n<p>Em resumo, o mercado está aquecido, tem muita oferta dentro e fora do Brasil.</p>\n<h2 id=\"precisamos-entender-os-movimentos-de-fora\">Precisamos entender os movimentos de fora</h2>\n<p>O mercado de fora está nadando de braçada por causa da cotação do dólar, estão levando times inteiros de uma vez só, e estou falando de grandes empresas perdendo seus profissionais, empresas que conseguem competir com salário acima da média do mercado.</p>\n<p>As empresas de fora estão contratando profissionais com alta qualidade, alto desempenho e muita criatividade a custos baixíssimos para o mercado deles.</p>\n<p>Do ponto de vista dos profissionais, basta se virar razoavelmente no inglês que as ofertas passam dos 20 mil reais por mês sem muito esforço. O trabalho é geralmente como contractor (PJ) e a cultura focada na entrega, trabalhando remoto, no conforto de casa e não tem relógio de ponto.</p>\n<h2 id=\"precisamos-rever-a-cultura-do-mercado-brazuca\">Precisamos rever a cultura do mercado brazuca</h2>\n<p>O mercado interno continua com alguns problemas crônicos:</p>\n<ul>\n<li>Cultura inadequada para contratar com requisitos irreais</li>\n<li>Apesar dos requisitos irreais a remuneração não é atrativa</li>\n<li>Cultura de querer contratar só seniors esquecendo de investir na base</li>\n<li>Muito foco no relógio de ponto e pouco foco no valor agregado</li>\n<li>Insistem em posições presenciais, mesmo quando não é necessário</li>\n<li>Só se sobe de carreira virando gestor</li>\n<li>Cultura interna sem foco em pessoas<ul>\n<li>Isso afasta os mais jovens</li>\n<li>Isso não retém os mais antigos</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"precisamos-respeitar-as-críticas-ao-manifesto\">Precisamos respeitar as críticas ao manifesto</h2>\n<p>Vejo pessoas trazendo críticas justas de problemas que são crônicos e que já passaram da hora de serem resolvidos. </p>\n<p>Vejo as pessoas desconfiadas com o momento trazendo questionamentos importantes, tais como:</p>\n<ul>\n<li>porque só agora?</li>\n<li>porque justamente no momento que empresas estão desesperadas?</li>\n<li>porque justamente no momento que os talentos estão indo embora do BR?</li>\n</ul>\n<p>Vejo pessoas apontando que o manifesto tem objetivo em resolver uma questão pontual do lado das empresas, esquecendo dos problemas das pessoas.</p>\n<h2 id=\"precisamos-respeitar-os-signatários\">Precisamos respeitar os signatários</h2>\n<p>Esse movimento é muito importante e precisamos aceitar isso.</p>\n<p>Vejo o movimento das empresas como algo positivo, eles estão se mexendo, tentando dar um norte para a TI do Brasil seguir, estão tentando se adequar e isso é importante, não dava mais para ficar inerte e ver a mão de obra desaparecer ou fingir que a cultura deles ainda funciona.</p>\n<p>Obviamente a mudança dentro das empresas é mais lenta, complicada e nem sempre muda como precisa, mas já ganham pontos por tentarem.</p>\n<h2 id=\"meus-pensamentos-sobre-investir-na-base\">Meus pensamentos sobre investir na base</h2>\n<p>Acho fundamental desde que realmente formem as pessoas.</p>\n<p>As vagas para JR hoje tem requisitos insanos, isso tem que mudar, JR a gente pega para ensinar, isso tem que ficar claro e ser o novo normal.</p>\n<p>A <strong>cultura</strong> precisa mudar, não só a <strong>postura</strong>, ao que me parece estão tomando uma nova <strong>postura</strong> em relação a contratar e formar pessoas.</p>\n<p>Como disse um amigo, eles querem plantar JRs para colherem SRs.</p>\n<h2 id=\"mas-será-que-vai-funcionar-imho\">Mas será que vai funcionar, IMHO?</h2>\n<p>Estamos vivendo um momento único, muito peculiar, e todos estão tentando se adaptar a ele, empresas e pessoas.</p>\n<p>Se mudarem de <strong>postura</strong> sem mudar de <strong>cultura</strong>, eles estarão capacitando pessoas para perder daqui a dois ou três anos para as mesmas empresas de fora.</p>\n<p>Agora, se mudarem de <strong>cultura</strong> e criarem condições para que as pessoas fiquem, proporcionando crescimento de carreira, desafios reais e concretos, oportunidades de capacitação e uma remenuração adequada, eu realmente acho que pode funcionar.</p>\n<p>As mudanças na cultura também passam por mudanças de comportamento dentro da empresa, em especial com seus times. Hoje todos querem trabalhar em um ambiente seguro, livre de assédio, tendo respeito e empatia como cernes da relação, além de bons incentivos e benefícios. </p>\n<p>Se a empresa não consegue oferecer isso, de nada adianta assinar o manifesto.</p>\n<h2 id=\"o-que-poderia-ser-diferente-imho\">O que poderia ser diferente, IMHO?</h2>\n<p>Acho que os valores humanos deveriam estar mais evidenciados e fazer parte do TOP 3 ou criar um TOP 5 deixando claro que o objetivo é criar uma cultura centrada em pessoas para que assim a empresa alcance seus objetivos e para que as pessoas cresçam junto com a empresa, ficando por lá por muitos anos.</p>\n<p>Não existem empresas sem pessoas, não se atinge metas sem pessoas, não se entrega valor sem pessoas,  então, acho que já é hora de assumir isso. </p>\n<p>As necessidades da empresa tem que estar em equilibrio com as necessidades das pessoas que trabalham nela.</p>\n<h2 id=\"como-ir-além-e-tentar-surtir-mais-efeito\">Como ir além e tentar surtir mais efeito?</h2>\n<p>Acho que faltou endereçar os problemas culturais crônicos – brazucas – no manifesto, assumindo claramente que precisamos evoluir juntos, empresas e pessoas.</p>\n<p>Acho que faltou dar o recado de que cultura tóxica – que ainda existe em muitas empresas – tem que ser condenada e extinta.</p>\n<p>Acho que faltou deixar claro que pessoas são o foco nessa mudança de postura e de cultura das empresas Brazucas signatárias. O foco nos jovens é sensacional, mas temos que ir além.</p>\n<p>Acho que manifesto poderia ser mais amplo e incluir plenos, seniors e especialistas, afinal eles não são inimigos. Acredito que no momento eles não estão encontrando as condições adequadas para se manter no mercado Brazuca e somente isso, nem todos querem ser gestores para terem um melhor remuneração, nem todos querem trabalhar para fora para serem valorizados, mas no fim foi o que conseguiram. Apesar de tudo, acho que com um pouco de esforço dá para acomodar todo mundo, basta cada um ceder um pouco.</p>\n<h2 id=\"amarrando-as-pontas\">Amarrando as pontas</h2>\n<p>Esses foram meus 50 cents na discussão, que continuem falando disso e que novas versões deste manifesto sejam lançadas conforme a percpeção de pessoas e empresas evoluirem – de preferência juntas.</p>\n<p>[s]<br>\nGuto</p>\n<hr>\n<p>Este post é do tipo #TLDR, entenda <a href=\"https://gutocarvalho.net/o-que-sao-tldrs/\">aqui</a>.</p>\n<p>Se gostou manda um alo no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a>.</p>\n",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "TLDR"
            ],
            "date_published": "2022-02-18T14:15:58-03:00",
            "date_modified": "2022-02-18T14:36:17-03:00"
        },
        {
            "id": "https://gutocarvalho.net/conheca-o-manifesto-tech/",
            "url": "https://gutocarvalho.net/conheca-o-manifesto-tech/",
            "title": "Conheça o manifesto tech",
            "summary": "<p>Manifesto para o mercado de tecnologia brasileiro</p>\n",
            "content_html": "<p>Manifesto para o mercado de tecnologia brasileiro</p>\n\n<p>Ele foi lançado recentemente e confesso que ainda estou refletindo sobre ele, mas já dá para ver que as empresas signatárias são fortes e que estão tentando dar uma direção para contratações e também buscam abordar mudanças de cultura nas empresas.<br><br>Ainda estou lendo com calma e vou opinar assim que me sentir confortável, mas parece que o manifesto tá fazendo bastante barulho e recebendo algumas críticas.<br><br>Então vai lá e tire suas próprias conclusões!<br><br><a href=\"https://manifestotech.org/\">https://manifestotech.org/</a><br><br>[s]<br>Guto</p>",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "FalaGutera"
            ],
            "date_published": "2022-02-18T10:01:36-03:00",
            "date_modified": "2022-02-18T12:24:31-03:00"
        },
        {
            "id": "https://gutocarvalho.net/kuma-um-projeto-para-ficar-de-olho/",
            "url": "https://gutocarvalho.net/kuma-um-projeto-para-ficar-de-olho/",
            "title": "Kuma.io, um projeto para ficar de olho!",
            "summary": "O kuma é um service mesh que roda em cima do envoy.",
            "content_html": "<p>O kuma é um service mesh que roda em cima do envoy.</p>\n<hr>\n<p>Me siga no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a> e acompanhe meus posts sobre Kubernetes, Cloud Native e CI/CD.</p>\n<p>Aproveite e siga também a <a href=\"https://twitter.com/CDeliveryFdn\">CD Foundation</a> e <a href=\"https://twitter.com/cloudnativefdn\">Cloud Native Foundation</a>.</p>\n<hr>\n<p>O kuma funciona no kubernetes, no openshit e também em ambiente de virtual machines e aparentemente suporta múltiplos meshs em um mesmo cluster.</p>\n<p>Características de segurança:</p>\n<ul>\n<li>Mesh / Muli-mesh</li>\n<li>Mutual TLS (MTLS)</li>\n<li>Traffic Permissions</li>\n</ul>\n<p>Características de controle de tráfego:</p>\n<ul>\n<li>Traffic Route &amp; Control</li>\n<li>Health Check</li>\n<li>Observability</li>\n<li>Service Discovery</li>\n<li>Faulty Injection</li>\n<li>Circuit Breaker</li>\n<li>Rate Limit</li>\n<li>Retries</li>\n<li>Virtual Onbound</li>\n</ul>\n<p>Características de observabilidade:</p>\n<ul>\n<li>Traffic Metrics</li>\n<li>Service Map</li>\n<li>Traffic Trace</li>\n<li>Traffic Log</li>\n</ul>\n<p>O Kuma foi construído em volta do projeto Envoy e traz embarcado o Kong Gateway.</p>\n<p>Uma das coisas interessantes que li sobre o projeto é que tem a  capacidade de funcionar multi-cluster, multi-cloud e multi-zone na mesma cloud.</p>\n<p>Ele também traz um dashboard bem intuitivo para trabalhar.</p>\n<p>Conversei com alguns Cloud Engineers que falaram muito bem dele.</p>\n<p>Tá na fila para estudar!</p>\n<p>[s]<br>\nGuto</p>\n<p>–</p>\n<p>Este post é do tipo #MindNotes, entenda <a href=\"https://gutocarvalho.net/o-que-sao-mindnotes/\">aqui</a>.</p>\n<p>Se gostou manda um alo no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a>.</p>\n",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "MindNotes"
            ],
            "date_published": "2022-02-18T09:33:56-03:00",
            "date_modified": "2022-02-18T09:55:18-03:00"
        },
        {
            "id": "https://gutocarvalho.net/minha-stack-com-cloud-engineer-em-20022/",
            "url": "https://gutocarvalho.net/minha-stack-com-cloud-engineer-em-20022/",
            "title": "Minha stack como Cloud Engineer em 2022",
            "summary": "Projetos que uso no dia a dia como Cloud Engineer. Me siga&hellip;",
            "content_html": "<p>Projetos que uso no dia a dia como Cloud Engineer.</p>\n<hr>\n<p>Me siga no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a> e acompanhe meus posts sobre Kubernetes, Cloud Native e CI/CD.</p>\n<p>Aproveite e siga também a <a href=\"https://twitter.com/CDeliveryFdn\">CD Foundation</a> e <a href=\"https://twitter.com/cloudnativefdn\">Cloud Native Foundation</a>.</p>\n<hr>\n<p>Bora lá descobrir!</p>\n<h4 id=\"para-orquestrar-infra-em-provedores-de-nuvem\">Para orquestrar Infra em provedores de nuvem?</h4>\n<ul>\n<li>Terraform</li>\n</ul>\n<h4 id=\"para-orquestrar-um-sistema-operacional\">Para orquestrar um sistema operacional?</h4>\n<ul>\n<li>Ansible</li>\n</ul>\n<h4 id=\"qual-plataforma-eu-usoprefiro-para-rodar-apps\">Qual plataforma eu uso/prefiro para rodar APPs?</h4>\n<ul>\n<li>Kubernetes</li>\n</ul>\n<h4 id=\"qual-meu-k8s-gerenciado-preferido\">Qual meu K8S Gerenciado preferido?</h4>\n<p>Em primeiro lugar!</p>\n<ul>\n<li>EKS</li>\n</ul>\n<p>Uma nova opção que tem se mostrado econômica e viável</p>\n<ul>\n<li>Kubernetes da Jelastic que uso via <a href=\"https://saveincloud.com/pt\">https://saveincloud.com/pt</a></li>\n</ul>\n<h4 id=\"qual-distribuição-preferida-para-kubernetes-onprem\">Qual distribuição preferida para Kubernetes OnPrem?</h4>\n<ul>\n<li>RKE</li>\n</ul>\n<h4 id=\"qual-distribuição-preferida-para-kubernetes-leveedgeiot\">Qual distribuição preferida para Kubernetes Leve/Edge/IoT?</h4>\n<ul>\n<li>K3S</li>\n</ul>\n<h4 id=\"runtime-para-kubernetes\">Runtime para Kubernetes?</h4>\n<ul>\n<li>Docker</li>\n</ul>\n<h4 id=\"pretente-mudar-para-algum-outro-runtime\">Pretente mudar para algum outro runtime?</h4>\n<p>Sem dúvida estou de olho em alternativas, são elas:</p>\n<ul>\n<li>CRI-O</li>\n<li>Containerd</li>\n</ul>\n<h4 id=\"quais-dashboards-preferidos-para-k8s\">Quais dashboards preferidos para K8S?</h4>\n<ul>\n<li>LENS para Desktop</li>\n<li>Rancher como Dashboard Web</li>\n<li>K9S para terminal</li>\n</ul>\n<p>E estou de olho no projeto abaixo</p>\n<ul>\n<li>Kubevious</li>\n</ul>\n<h4 id=\"o-que-usa-para-validar-seus-manifestos-yaml-\">O que usa para validar seus manifestos YAML ?</h4>\n<ul>\n<li>Kubeval</li>\n</ul>\n<h4 id=\"para-empacotar-apps-para-kubernetes\">Para empacotar APPs para Kubernetes?</h4>\n<ul>\n<li>HELM</li>\n</ul>\n<h4 id=\"o-que-usa-para-monitorar-o-cluster-e-apps-em-seu-kubernetes\">O que usa para monitorar o cluster e apps em seu Kubernetes?</h4>\n<ul>\n<li>Kube-prometheus-stack (Node Exporter + Prometheus + Grafana)</li>\n</ul>\n<h4 id=\"e-como-storage-de-blocos-distribuído-rodando-no-cluster\">E como storage de blocos distribuído rodando no cluster?</h4>\n<p>Quando existe a necessidade eu uso</p>\n<ul>\n<li>Longhorn</li>\n</ul>\n<h4 id=\"e-como-storage-de-objetos-rodando-no-cluster\">E como storage de objetos rodando no cluster?</h4>\n<p>Quando existe a necessidade eu uso</p>\n<ul>\n<li>Minio</li>\n</ul>\n<h4 id=\"e-para-fazer-backup\">E para fazer backup?</h4>\n<ul>\n<li>Velero</li>\n</ul>\n<h4 id=\"e-como-ferramenta-de-registry\">E como ferramenta de registry?</h4>\n<ul>\n<li>Harbor</li>\n</ul>\n<h4 id=\"o-que-usa-para-gerenciar-certificados-no-kubernetes\">O que usa para gerenciar certificados no Kubernetes?</h4>\n<ul>\n<li>CertManager + LetsEncrypt</li>\n</ul>\n<h4 id=\"o-quer-usa-para-service-mesh-no-kubernetes\">O quer usa para service mesh no Kubernetes?</h4>\n<p>Quando o projeto pede, vamos de</p>\n<ul>\n<li>Istio</li>\n</ul>\n<h4 id=\"o-que-usa-no-kubernetes-para-autoscaling\">O que usa no kubernetes para autoscaling?</h4>\n<p>O que já vem pronto</p>\n<ul>\n<li>HPA</li>\n</ul>\n<p>E para complementar?</p>\n<ul>\n<li>Keptn ou</li>\n<li>Kaperter</li>\n</ul>\n<h4 id=\"o-que-usa-para-manter-a-qualidade-da-apps-rodando\">O que usa para manter a qualidade da APPs rodando?</h4>\n<p>Quando o projeto pede, vamos de</p>\n<ul>\n<li>Keda</li>\n</ul>\n<h4 id=\"o-que-usa-para-centralizar-logs-do-cluster-e-suas-apps\">O que usa para centralizar logs do cluster e suas APPs?</h4>\n<ul>\n<li>Grafana Loki</li>\n</ul>\n<h4 id=\"qual-tecnologia-de-cicd-usa-hoje-em-dia\">Qual tecnologia de CI/CD usa hoje em dia?</h4>\n<p>Difícil apontar uma, normalmente eu vou onde me sinto confortável:</p>\n<ul>\n<li>GitLab CI ou</li>\n<li>GitHub Actions</li>\n</ul>\n<p>Contudo estou inclinado em usar coisas mais Cloud Native e tenho estudado:</p>\n<ul>\n<li>ArgoCD</li>\n<li>Flux</li>\n<li>Tekton</li>\n<li>Werf</li>\n</ul>\n<h4 id=\"o-que-usa-para-checar-a-sanidadesaúde-do-cluster\">O que usa para checar a sanidade/saúde do cluster?</h4>\n<ul>\n<li>Popeye</li>\n<li>Kube Bench</li>\n</ul>\n<h4 id=\"e-para-checar-aspectos-de-segurança\">E para checar aspectos de segurança?</h4>\n<ul>\n<li>Kuber Hunter</li>\n</ul>\n<h4 id=\"e-no-caso-de-chaos-test\">E no caso de Chaos Test?</h4>\n<p>É bem nicho, mas tem essa ferramentinha simples e bacana</p>\n<ul>\n<li>ChaosKube</li>\n</ul>\n<h4 id=\"para-api-gateway\">Para API Gateway?</h4>\n<p>Quando o projeto pede, vamos de</p>\n<ul>\n<li>Kong</li>\n</ul>\n<h4 id=\"para-tracing\">Para Tracing</h4>\n<p>To de olho no </p>\n<ul>\n<li>Grafana Tempo + OpenTelemetry</li>\n</ul>\n<h2 id=\"amarrando-as-pontas\">Amarrando as pontas</h2>\n<p>Acho que é isso. A lista é longa e mostra como o Cloud Enginner tem que ser flexível e estudar muito para integrar tudo e manter sua aplicação rodando em nuvem da forma mais estável, saudável, performática e segura possível ;)</p>\n<p>Volto para atualizar se tiver mais alguma coisa em mente!</p>\n<p>[s]<br>\nGuto</p>\n<p>–</p>\n<p>Este post é do tipo #MindNotes, entenda <a href=\"https://gutocarvalho.net/o-que-sao-mindnotes/\">aqui</a>.</p>\n<p>Se gostou manda um alo no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a>.</p>\n",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "MindNotes"
            ],
            "date_published": "2022-02-17T19:56:03-03:00",
            "date_modified": "2022-02-18T12:05:18-03:00"
        },
        {
            "id": "https://gutocarvalho.net/live-com-saveincloud-no-dia-22-de-fevereiro/",
            "url": "https://gutocarvalho.net/live-com-saveincloud-no-dia-22-de-fevereiro/",
            "title": "Live com Save&#x27;In&#x27;Cloud no dia 22 de Fevereiro",
            "summary": "<p>Pessoal estarei com a Save'in'Cloud falando sobre Kubernetes e Cloud Native. </p>\n",
            "content_html": "<p>Pessoal estarei com a Save'in'Cloud falando sobre Kubernetes e Cloud Native. </p>\n\n<p>A live começará as 19 horas no horário de Brasília.<br><br>Participe e aproveite para tirar suas dúvidas!<br><br><a href=\"https://cloud.saveincloud.com.br/lp/meetup-kubernetes-22-02/\" target=\"_blank\" rel=\"noopener noreferrer\">https://cloud.saveincloud.com.br/lp/meetup-kubernetes-22-02/</a><br><br>[s]<br>Guto</p>",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "Eventos"
            ],
            "date_published": "2022-02-17T17:12:38-03:00",
            "date_modified": "2022-02-17T17:13:45-03:00"
        },
        {
            "id": "https://gutocarvalho.net/entendendo-o-kubernetes-and-cloud-native/",
            "url": "https://gutocarvalho.net/entendendo-o-kubernetes-and-cloud-native/",
            "title": " Entendendo o Kubernetes &amp; Cloud Native",
            "summary": "Bora entender isso e ficar na mesma página? Vem com a gente!&hellip;",
            "content_html": "<p>Bora entender isso e ficar na mesma página? Vem com a gente!</p>\n<p>Me siga no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a> e acompanhe meus posts sobre Cloud Native e CI/CD.</p>\n<p>Siga a <a href=\"https://twitter.com/CDeliveryFdn\">CD Foundation</a> e <a href=\"https://twitter.com/cloudnativefdn\">Cloud Native Foundation</a> no twitter.</p>\n<h2 id=\"o-que-é\">O que é?</h2>\n<p>O kubernetes é um orquestrador de containers que oferece meios para você executar, escalar e atualizar seu software de forma simples e eficiente.</p>\n<p>Com o kubernetes podemos automatizar a implantação de nosso software integrando nossa pipeline com um cluster de containers, conseguindo assim entregar nosso software de maneira rápida e controlada.</p>\n<h2 id=\"origens\">Origens</h2>\n<p>Em 2014 o google liberou um projeto open source interno que orquestrava containers, ele foi a base para o Kubernetes.</p>\n<h3 id=\"curiosidades-sobre-as-origens\">Curiosidades sobre as origens</h3>\n<p>No Google, internamente o projeto se chamava BORG.</p>\n<p>O projeto BORG foi reescrito em GO e foi rebatizado de Kubernetes.</p>\n<p>Kubernetes significa timoneiro – em grego, aquele que pilota uma embarcação.</p>\n<p>A primeira release do kubernetes foi lançada em 7 de Junho de 2014.</p>\n<h2 id=\"cloud-native-computing-foundation-ou-cncf\">Cloud Native Computing Foundation ou CNCF</h2>\n<p>O Google queria algum lugar para hospedar não só o projeto Kubernetes em si, mais um lugar em que todos pudessem contribuir com o projeto e criar novas soluções para esse segmento de aplicações rodando em containers.</p>\n<p>Com essa ideia em mente, o Google entrou em contato com a Linux Foundation para criar uma estrutura que pudesse receber esse projeto e fomentar tecnologias e soluções ligadas a esse novo universo de containers.</p>\n<p>A Linux Foundation criou então a CNCF, Cloud Native Computing Foundation para fomentar o desenvolvimento do Kubernetes e de tecnologias com foco em containers. O Termo Cloud Native foi cunhado e passou a ser utilizado para se referir aplicações desta natureza.</p>\n<p>A CNCF foi fundada e teve seu anúncio junto com o lançamento da versão 1.0 do Kubernetes em 21 de Julho de 2015.</p>\n<h2 id=\"como-funciona-\">Como funciona ?</h2>\n<p>O Kubernetes ou K8S como é chamado de forma abreviada é um orquestrador  que foi desenhado para gerenciar workloads de containers e serviços de forma automatizada, utilizando configuração declarativa que usa o estrutura e formato de dados do projeto YAML.</p>\n<p>Isso significa que podemos definir o estado desejado de funcionamento de nosso cluster e também das aplicações rodando neste, apenas utilizando convenções em YAML. Os operadores do cluster vão ler essas definições e garantir esse estado, fazendo modificações quando for necessário.</p>\n<p>O kubernetes oferece:</p>\n<ul>\n<li>Serviço de descoberta</li>\n<li>Serviço de balanceamento de carga</li>\n<li>Serviço de proxy</li>\n<li>Gerenciamento de redes e sub-redes</li>\n<li>Gerenciamento de DNS</li>\n<li>Orquestração de storage para os containers</li>\n<li>Automação de rollouts ou rollbacks de suas aplicações</li>\n<li>Gerenciamento dos certificados com geração e renovação automática</li>\n<li>Gerenciamento de configuraçoes (configmaps)</li>\n<li>Gerenciamento de segredos (secrets)</li>\n<li>Gerenciamento de jobs (cronjobs)</li>\n<li>Gerenciamento de limites de recursos para cada container</li>\n<li>Self-healing, ele reinicia ou substitiu um container em caso de falha</li>\n</ul>\n<p>Em resumo, o kubernetes vai oferecer tudo que é necessário para sua aplicação rodar e ser utilizada por seus usuários.</p>\n<h3 id=\"por-que-chamam-o-k8s-de-os-de-datacenter\">Por que chamam o K8S de OS de Datacenter?</h3>\n<p>Em alguns treinamentos ou palestras você pode ouvir o pessoal falando que o Kuberneters – antigo BORG – é um sistema operacional de datacenter, e tudo bem, faz sentido falar isso.</p>\n<p>Se obervarmos com cuidado, vamos ver que o kubernetes oferece tudo que um software precisa, indo do endereço ip, rede, storage, balanceamento, dns, certificado, configurações, segredos, em suma, ele traz tudo que um datacenter ofereceria para uma aplicação em um lugar só, e essa é beleza e a força do projeto.</p>\n<p>É de fato um datacenter inteiro em uma única solução.</p>\n<h2 id=\"quais-os-benefícios\">Quais os benefícios?</h2>\n<p>Como o kubernetes oferece tudo que sua aplicação precisa, você tem mais tempo para se preocupar com o negócio, isso pode melhorar sua produtividade e reduzir tempo gasto com configurações comuns geralmente executadas em sua infraestrutura clássica.</p>\n<p>O cluster kubernetes te ajuda a usar os recursos computacionais de forma mais eficiente. Como tudo roda em containers, você consegue compartilhar mais recursos computacionais com diferentes aplicações sendo executadas no cluster.</p>\n<p>O processo de entrega e o ciclo de desenvolvimento do software pode ser sensivelmente reduzido depois que você integrar o cluster ao seu processo de desenvolvimento.</p>\n<p>Uma vez que sua aplicação está rodando em Kubernetes, você conseguirá rodá-la praticamente em quaisquer cloud pública que suporte kubernetes. Essa portabilidade é muito importante e oferece a capacidade de seu software funcionar em diferentes clouds, podendo escolher aquela com melhor custo, ou até replicar sua aplicação em provedores diferentes para garantir mais disponibilidade.</p>\n<p>Ao usar aplicações dentro do cluster, você conseguirá reduzir sensivelmente o custo de sua conta em uma Cloud Pública, isso acontece pois o Kubernetes já traz a maioria dos recursos de forma nativa, reduzindo assim dua despesa no final do mês.</p>\n<p>O Kubernetes é o orquestrador líder de mercado, é comprovadamente estável, é mantido por diversas empresas incluindo o Google e foi testado em produção em diversos cenários com sucesso, o que nos garante que não estamos embarcando em uma aventura com uma tecnologia com pouca maturidade. Existem muitos cases de aplicações de missão crítica rodando em clusters Kubernetes, se é eficiente para eles, é eficiente para você.</p>\n<h2 id=\"é-realmente-seguro\">É realmente seguro?</h2>\n<p>Sim é seguro, contudo, como qualquer outro software ou plataforma a segurança tem que fazer parte de suas preocupações desde o momento do design de seu cluster.</p>\n<p>Coisas como:</p>\n<ul>\n<li>Escolher uma distribuição kubernetes certificada pela CNCF</li>\n<li>Escolher um OS base mínimo, com foco em K8S</li>\n<li>Remover credenciais e acessos desnecessários</li>\n<li>Evitar rodar qualquer coisa com privilégios de ROOT</li>\n<li>Seguir todas as boas práticas de segurança para clusters K8S</li>\n<li>Fazer o hardeding de seus clusters</li>\n<li>Instalar ferramentas para verificar a segurança de seu cluster regularmente</li>\n<li>Centralizar e acompanhar os logs do cluster e das APPs</li>\n<li>Centralizar e acompanhar as métricas do cluster e das APPs</li>\n<li>Inserir segurança no processo de desenvolvimento de suas APPS desde o dia zero</li>\n</ul>\n<p>Seguindo essas dicas você terá tanto um cluster quando APPs seguras rodando nele.</p>\n<h2 id=\"consigo-rodar-meu-software-nele\">Consigo rodar meu software nele?</h2>\n<p>Consegue sim, mesmo se for um monolito.</p>\n<p>Diferente do que muitos pensam o Kubernetes pode rodar qualquer software que esteja embarcado em um container, seja um monolito, um microserviço ou uma API.</p>\n<p>Obviamente se você estiver iniciando o desenvolvimento do seu software o ideal é pensar em decompor sua solução em microserviços que se comunicam via API, pensar em aplicações do tipo stateless, pensar em aplicações que podem rodar em múltiplos nodes e pods, pensar em uso de banco de dados externo, pensar em persistência e armazenamento de arquivos usando storage de objetos – estilo S3 – dentre outras boas práticas de APPs Cloud Native. </p>\n<p>Seguindo essas  dicas, você terá de fato uma aplicação Cloud Native que poderá usar o melhor do Kubernetes. Sua aplicação conseguirá escalar horizontalmente e atender a demanda crescente de seus usuários.</p>\n<h2 id=\"consigo-rodar-kubernetes-on-premisses\">Consigo rodar Kubernetes on-premisses?</h2>\n<p>Sim consegue, existem excelentes distribuições para rodar On-Premisses, uma delas é o RKE da Rancher.</p>\n<p>Quando falamos de on-premisses, precisamos pensar em um desenho robusto de nosso cluster, lembrar que precisamos de redudância entre hypervisors, backup real e eficiente, load balancer L4, centralização de logs, monitoramento, avaliação de métricas e performance, gerenciamento de certificados dentre outras coisas que precisam ser configuradas e levadas em conta para termos um cluster on-premisses rodando de forma segura, estável e performática.</p>\n<h2 id=\"consigo-rodar-kubernetes-em-meu-provedor-de-nuvem\">Consigo rodar Kubernetes em meu provedor de nuvem?</h2>\n<p>Sim consegue também, rodando em instâncias virtuais da mesma forma como rodaria on-premisses ou usando serviços gerenciados do provedor.</p>\n<h2 id=\"vale-a-pena-usar-o-kubernetes-gerenciado\">Vale a pena usar o kubernetes gerenciado?</h2>\n<p>Vale muito, especialmente se seu time é mais focado em desenvolvimento do que em infraestrutura.</p>\n<p>No caso de plataformas gerenciadas como EKS da AWS, GKS do Google, AKS da Azure, OKE da Oracle  ou mesmo o Kubernetes gerenciado da Jelastic/SaveinCloud toda a parte da configuração e funcionamento do cluster, em especial os nós de controle, são mantidos pelo provedor, você só se preocupa com seus workloads e os nós do tipo worker que serão registrados no cluster que foi criado.</p>\n<p>Com um kubernetes gerenciado você pode focar em seu negócio e deixar a infra com o provedor, é o melhor cenário para uma empresa com um time pequeno de desenvovledores ou um time sem engenheiros de nuvem.</p>\n<h2 id=\"o-que-são-aplicações-cloud-native\">O que são aplicações Cloud Native?</h2>\n<p>Aplicações Cloud Native são aquelas que já são construídas pensando em se beneficiar de recursos da computação em nuvem. E neste caso, isso esta intimamente ligado ao uso de containers e a orquestração destes.</p>\n<p>Características de aplicações Cloud Native</p>\n<ul>\n<li>Uso da Cultura DevOps no dia-a-dia do time do produto</li>\n<li>Uso de métodos ágeis no desenvolvimento do produto</li>\n<li>Uso de arquitetura de microserviços e API-First</li>\n<li>Foco em oferecer métricas de seus componentes desde o dia zero</li>\n<li>Foco em oferecer amplo monitoramento de suas features desde o dia zero</li>\n<li>Foco em portabilidade e execução multi-cloud desde o dia zero</li>\n<li>Abstração de sistema operacional com uso de containers</li>\n<li>Uso de pipelines de integração contínua no processo de desenvolvimento</li>\n<li>Uso de pipelines de entrega contínua para publicar seu software</li>\n<li>Software desenhado para rodar como “Stateless”</li>\n<li>Software pensado para uso de storage de objetos ao invés de filesystem</li>\n<li>Software pensado para funcionar em cenários de escalabilidade horizontal</li>\n<li>Software pensado para rodar em clusters de containers como kubernetes ou nomad</li>\n<li>Software pensado para ser resiliente a falhas, onde possamos usar chaos engineering para testá-lo</li>\n<li>Foco na rápida entrega de atualizações e novidades para seus usuários</li>\n<li>Foco na capacidade de fazer rollback de forma fácil e simples caso seja nesessário</li>\n</ul>\n<p>Eu acrescentaria ainda:</p>\n<ul>\n<li>Suporte nativo a Kubernetes e Docker</li>\n</ul>\n<p>Basicamente são essas as características que representam uma APP Cloud Native hoje, pelo menos em minha humilde opinião.</p>\n<h2 id=\"amarrando-as-pontas\">Amarrando as pontas</h2>\n<p>Espero que eu tenha conseguido explicar o projeto Kubernetes e o conceito de Cloud Native para você.</p>\n<p>Em breve falaremos da arquitetura do Kubernetes! :)</p>\n<p>[s]<br>\nGuto</p>\n<hr>\n<p>Este post é do tipo #TLDR, entenda <a href=\"https://gutocarvalho.net/o-que-sao-tldrs/\">aqui</a>.</p>\n<p>Se gostou manda um alo no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a>.</p>\n",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "TLDR"
            ],
            "date_published": "2022-02-16T17:14:07-03:00",
            "date_modified": "2022-02-17T08:13:18-03:00"
        },
        {
            "id": "https://gutocarvalho.net/cfp-para-cdcon-2022/",
            "url": "https://gutocarvalho.net/cfp-para-cdcon-2022/",
            "title": "CFP para CdCon 2022",
            "summary": "Pessoal, faltam 5 dias para fechar a CFP para a CdCON Texas&hellip;",
            "content_html": "<p>Pessoal, faltam 5 dias para fechar a CFP para a CdCON Texas 2022.</p>\n<p>Bora enviar propostas!<br><br><a href=\"https://events.linuxfoundation.org/cdcon/program/cfp/\">https://events.linuxfoundation.org/cdcon/program/cfp</a></p>\n<p>Visite o site da CDCON<br><br><a href=\"https://events.linuxfoundation.org/cdcon\">https://events.linuxfoundation.org/cdcon</a></p>\n<p>[s]<br>Guto</p>",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "MindNotes"
            ],
            "date_published": "2022-02-15T15:58:17-03:00",
            "date_modified": "2022-02-15T15:58:17-03:00"
        },
        {
            "id": "https://gutocarvalho.net/conheca-o-cloud-native-trail-map/",
            "url": "https://gutocarvalho.net/conheca-o-cloud-native-trail-map/",
            "title": "Conheça o Cloud Native Trail Map",
            "summary": "<p>Saiba como iniciar sua jornada <a href=\"https://raw.githubusercontent.com/cncf/trailmap/master/CNCF_TrailMap_latest.png\"><strong>Cloud Native</strong></a>!</p>\n",
            "content_html": "<p>Saiba como iniciar sua jornada <a href=\"https://raw.githubusercontent.com/cncf/trailmap/master/CNCF_TrailMap_latest.png\"><strong>Cloud Native</strong></a>!</p>\n\n<p>Me siga no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a> e acompanhe meus posts sobre Cloud Native e CI/CD.</p>\n<p>Siga a <a href=\"https://twitter.com/CDeliveryFdn\">CD Foundation</a> e <a href=\"https://twitter.com/cloudnativefdn\">Cloud Native Foundation</a> no twitter.</p>\n<p>Revisor: <a href=\"https://twitter.com/rkpegoraro\">Ricardo Pegoraro</a></p>\n<hr>\n<figure class=\"post__image\"><br>Esse mapa sugere um caminho com 10 passos para você entrar no mundo Cloud Native sempre utilizando tecnologias open source para sua jornada.<br><br>Abaixo do mapa eu comento livremente passo a passo! :)<br><br><img loading=\"lazy\"  src=\"https://gutocarvalho.net/media/posts/111/CNCF_TrailMap_2022-02-15-2.png\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://gutocarvalho.net/media/posts/111/responsive/CNCF_TrailMap_2022-02-15-2-xs.png 300w ,https://gutocarvalho.net/media/posts/111/responsive/CNCF_TrailMap_2022-02-15-2-sm.png 480w ,https://gutocarvalho.net/media/posts/111/responsive/CNCF_TrailMap_2022-02-15-2-md.png 768w\"  alt=\"Cloud Native Trail Map\" width=\"7653\" height=\"8869\"></figure>\n<p class=\"part\" title=\"\" data-startline=\"10\" data-endline=\"10\" data-position=\"283\" data-size=\"0\" data-original-title=\"\" aria-describedby=\"popover429228\"><strong data-position=\"283\" data-size=\"0\"><span data-position=\"285\" data-size=\"24\">Passo 1: Containerização</span></strong></p>\n<div id=\"popover429228\" class=\"popover selection-popover top in\">\n<div class=\"arrow\"><span style=\"color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);\"><br>Aqui nesse passo a ideia é atuar para que sua aplicação rode em containers. No futuro é interessante pensar em desacoplar sua APP para rodar pequenas partes do seu software de forma separada usando o conceito de <strong>microserviços</strong>.</span></div>\n</div>\n<p class=\"part\" data-startline=\"14\" data-endline=\"14\" data-position=\"542\" data-size=\"0\"><span data-position=\"541\" data-size=\"31\">Normalmente nesse passo usamos </span><strong data-position=\"572\" data-size=\"0\"><span data-position=\"574\" data-size=\"6\">Docker </span></strong>e escrevemos os primeiros<span data-position=\"582\" data-size=\"12\"> </span><strong data-position=\"594\" data-size=\"0\"><span data-position=\"596\" data-size=\"11\">Dockerfiles</span></strong><span data-position=\"609\" data-size=\"1\">.</span></p>\n<p class=\"part\" data-startline=\"16\" data-endline=\"16\" data-position=\"613\" data-size=\"0\"><strong data-position=\"613\" data-size=\"0\"><span data-position=\"615\" data-size=\"36\">Passo 2: Construir sua esteira CI/CD</span></strong></p>\n<p class=\"part\" data-startline=\"18\" data-endline=\"18\" data-position=\"655\" data-size=\"0\"><span data-position=\"655\" data-size=\"168\">Neste passo a ideia é criar uma esteira para que essa faça o build da sua imagem automaticamente quando houver uma atualização no seu código. Essa esteira deve fazer o </span><strong data-position=\"823\" data-size=\"0\"><span data-position=\"825\" data-size=\"5\">build</span></strong><span data-position=\"832\" data-size=\"2\">, </span><strong data-position=\"834\" data-size=\"0\"><span data-position=\"836\" data-size=\"6\">testar</span></strong><span data-position=\"844\" data-size=\"19\"> sua app e fazer o </span><strong data-position=\"863\" data-size=\"0\"><span data-position=\"865\" data-size=\"6\">deploy</span></strong><span data-position=\"873\" data-size=\"6\"> para </span><strong data-position=\"879\" data-size=\"0\"><span data-position=\"881\" data-size=\"7\">staging</span></strong><span data-position=\"890\" data-size=\"15\"> e depois para </span><strong data-position=\"905\" data-size=\"0\"><span data-position=\"907\" data-size=\"8\">produção</span></strong><span data-position=\"917\" data-size=\"59\">, já rodando sua aplicação em uma plataforma de containers.</span></p>\n<p class=\"part\" data-startline=\"20\" data-endline=\"20\" data-position=\"978\" data-size=\"0\"><span data-position=\"978\" data-size=\"49\">Aqui algumas pessoas já estão usando um pouco de </span><strong data-position=\"1027\" data-size=\"0\"><span data-position=\"1029\" data-size=\"14\">docker-compose</span></strong><span data-position=\"1045\" data-size=\"32\"> para facilitar o uso de Docker.</span></p>\n<p class=\"part\" data-startline=\"22\" data-endline=\"22\" data-position=\"1079\" data-size=\"0\"><span data-position=\"1079\" data-size=\"64\">Um excelente solução para construir sua esteira é usar o projeto <strong>ArgoCD</strong>.</span></p>\n<p class=\"part\" data-startline=\"24\" data-endline=\"24\" data-position=\"1146\" data-size=\"0\"><strong data-position=\"1145\" data-size=\"0\"><span data-position=\"1147\" data-size=\"37\">Passo 3: Começar a orquestrar sua APP</span></strong></p>\n<p class=\"part\" data-startline=\"26\" data-endline=\"26\" data-position=\"1189\" data-size=\"0\"><span data-position=\"1188\" data-size=\"286\">Aqui a ideia é ir além do Docker, começando a utilizar um orquestrador de containers como Kubernetes ou Nomad. Utilizando um orquestrador você já vai rodar suas apps em um ambiente mais robusto, com estrutura de cluster com diversos benefícios como disponibilidade, escalabilidade, descoberta e muito mais.</span></p>\n<p class=\"part\" data-startline=\"28\" data-endline=\"28\" data-position=\"1477\" data-size=\"0\"><span data-position=\"1476\" data-size=\"144\">É importante escolher uma distribuição certificada pela CNCF e usar ferramentas adequadas para armazenar suas imagens e empacotar sua aplicação.</span></p>\n<p class=\"part\" data-startline=\"30\" data-endline=\"30\" data-position=\"1623\" data-size=\"0\"><span data-position=\"1622\" data-size=\"151\">Sugestões de ferramentas são <strong>Kubernetes</strong> para o cluster de containers, <strong>HELM</strong> para empacotamento de suas apps e <strong>Harbor</strong> para armazenamento de suas imagens.</span></p>\n<p class=\"part\" data-startline=\"32\" data-endline=\"32\" data-position=\"1776\" data-size=\"0\"><span data-position=\"1775\" data-size=\"228\">Mudando para um cluster você terá que ajustar suas esteiras para que o deploy seja feito neste novo ambiente, na esteira você também vai adicionar um passo para armazenar a imagem no <strong>registry</strong> e empacotar sua APP no formato <strong>HELM</strong>.</span></p>\n<p class=\"part\" data-startline=\"34\" data-endline=\"34\" data-position=\"2006\" data-size=\"0\"><strong data-position=\"2005\" data-size=\"0\"><span data-position=\"2007\" data-size=\"34\">Passo 4: Observabilidade e Análise</span></strong></p>\n<p class=\"part\" data-startline=\"36\" data-endline=\"36\" data-position=\"2046\" data-size=\"0\"><span data-position=\"2045\" data-size=\"312\">Do passo 1 ao passo 3 você estará se preparando para entrar no universo Cloud Native, se chegou no passo 3 já é uma grande vitória. Entrar no passo 4 significa que você já atingiu uma certa maturidade para rodar seu software e agora precisa de dados para melhorar e manter tudo funcionando da forma mais adequada.</span></p>\n<p class=\"part\" data-startline=\"38\" data-endline=\"38\" data-position=\"2361\" data-size=\"0\"><span data-position=\"2359\" data-size=\"73\">Aqui vamos pensar em monitoração, métricas, logs e tracing de aplicações.</span></p>\n<p class=\"part\" data-startline=\"40\" data-endline=\"40\" data-position=\"2436\" data-size=\"0\"><span data-position=\"2434\" data-size=\"204\">Para monitoramento geralmente utilizamos o <strong>prometheus</strong> para coletar e consolidar os dados, o <strong>grafana</strong> para visualizar esses dados em dashboards, para logs podemos usar o <strong>fluentd</strong> e para tracing o <strong>opentracing</strong>.<br><br>Usamos essas ferramenta para ver se tudo está funcionando, para avaliar a saúde de nossa aplicação e sua performance, afinal, não tem como melhorar algo se não temos métricas para comparar a evolução – ou regressão -  de alguma coisa.</span></p>\n<p class=\"part\" data-startline=\"42\" data-endline=\"42\" data-position=\"2642\" data-size=\"0\"><strong data-position=\"2640\" data-size=\"0\"><span data-position=\"2642\" data-size=\"42\">Passo 5: Service Proxy, Discovery and Mesh</span></strong></p>\n<p class=\"part\" data-startline=\"44\" data-endline=\"44\" data-position=\"2690\" data-size=\"0\"><span data-position=\"2688\" data-size=\"201\">Bom agora que já temos nossa APP rodando em um cluster Kubernetes, com pipeline para entregar software, monitoramento e métricas de nosso software é hora de pensarmos em usarmos mais de nossos clusters.</span></p>\n<p class=\"part\" data-startline=\"46\" data-endline=\"46\" data-position=\"2895\" data-size=\"0\"><span data-position=\"2891\" data-size=\"175\">Podemos explorar mais os recursos de serviço discovery, service mesh e load balancing, cada qual em seu quadrado para ajudar nossa aplicação a se manter consistente e escalar.</span></p>\n<p class=\"part\" data-startline=\"48\" data-endline=\"48\" data-position=\"3072\" data-size=\"0\"><span data-position=\"3068\" data-size=\"74\">As sugestões aqui são <strong>Envoy</strong> (Proxy), <strong>CoreDNS</strong> (Discovery) e <strong>Linkerd</strong> (Mesh).</span></p>\n<p class=\"part in-view\" data-startline=\"51\" data-endline=\"51\" data-position=\"3149\" data-size=\"0\"><strong data-position=\"3149\" data-size=\"0\"><span data-position=\"3151\" data-size=\"34\">Passo 6: Network Policy &amp; Security</span></strong></p>\n<p class=\"part in-view\" data-startline=\"53\" data-endline=\"53\" data-position=\"3189\" data-size=\"0\"><span data-position=\"3189\" data-size=\"387\">Pensar em rede segurança é importante, manter seu cluster seguro é essencial. O kubernetes oferece recursos muito flexíveis para fazer o design de sua rede interna, e além disso, temos excelentes ferramentas para tratar da segurança de nosso cluster, desde a segurança de acesso aos recursos do cluster, configurações do cluster indo até a avaliação de vulnerabilidades das APPs rodando.</span></p>\n<p class=\"part in-view\" data-startline=\"55\" data-endline=\"55\" data-position=\"3578\" data-size=\"0\"><span data-position=\"3578\" data-size=\"62\">APPs para ajudar: <strong>CNI</strong> (rede), <strong>OPA</strong> (Policy) e <strong>Falco</strong> (security).</span></p>\n<p class=\"part in-view\" data-startline=\"57\" data-endline=\"57\" data-position=\"3642\" data-size=\"0\"><strong data-position=\"3642\" data-size=\"0\"><span data-position=\"3644\" data-size=\"46\">Passo 7: Storage e Banco de dados distribuídos</span></strong></p>\n<p class=\"part in-view\" data-startline=\"59\" data-endline=\"59\" data-position=\"3694\" data-size=\"0\"><span data-position=\"3694\" data-size=\"219\">Quando a gente precisa de mais resiliência e disponibilidade para nossos bancos, rodar o banco no cluster começa a fazer muito sentido, em especial se compararmos com um banco rodando em uma arquitetura single-instance.</span></p>\n<p class=\"part in-view\" data-startline=\"61\" data-endline=\"61\" data-position=\"3915\" data-size=\"0\"><span data-position=\"3915\" data-size=\"76\">Temos tecnologias Cloud Native para por exemplo rodar bancos de dados com o </span><strong data-position=\"3991\" data-size=\"0\"><span data-position=\"3993\" data-size=\"5\">MySQL</span></strong><span data-position=\"4000\" data-size=\"40\"> de forma distribuída no cluster como o </span><strong data-position=\"4040\" data-size=\"0\"><span data-position=\"4042\" data-size=\"6\">Vitess</span></strong><span data-position=\"4050\" data-size=\"30\">, temos ainda projetos como o </span><strong data-position=\"4080\" data-size=\"0\"><span data-position=\"4082\" data-size=\"11\">CrunchyData</span></strong><span data-position=\"4095\" data-size=\"30\"> para rodar um ambiente HA de </span><strong data-position=\"4125\" data-size=\"0\"><span data-position=\"4127\" data-size=\"8\">Postgres</span></strong><span data-position=\"4137\" data-size=\"27\"> (completo) em nosso cluster.</span></p>\n<p class=\"part in-view\" data-startline=\"63\" data-endline=\"63\" data-position=\"4166\" data-size=\"0\"><span data-position=\"4166\" data-size=\"125\">A parte de persistência de dados também ganha uma atenção especial, no caso de banco de dados ou de qualquer outra aplicação </span><strong data-position=\"4291\" data-size=\"0\"><span data-position=\"4293\" data-size=\"10\">“stateful”</span></strong><span data-position=\"4305\" data-size=\"31\"> que necessite persistir dados.</span></p>\n<p class=\"part in-view\" data-startline=\"65\" data-endline=\"65\" data-position=\"4339\" data-size=\"0\"><span data-position=\"4339\" data-size=\"71\">Para atender a demanda de persistir dados temos soluções robustas como </span><strong data-position=\"4410\" data-size=\"0\"><span data-position=\"4412\" data-size=\"8\">LongHorn</span></strong><span data-position=\"4422\" data-size=\"3\"> e </span><strong data-position=\"4425\" data-size=\"0\"><span data-position=\"4427\" data-size=\"7\">OpenEBS</span></strong><span data-position=\"4436\" data-size=\"21\"> que são soluções de </span><strong data-position=\"4457\" data-size=\"0\"><span data-position=\"4459\" data-size=\"13\">block-storage</span></strong><span data-position=\"4474\" data-size=\"85\"> que podem ser utilizadas combinados com o Vitess, CrunchyData ou qualquer outra app.</span></p>\n<p class=\"part in-view\" data-startline=\"67\" data-endline=\"67\" data-position=\"4561\" data-size=\"0\"><span data-position=\"4561\" data-size=\"48\">Temos ainda soluções de storage de objetos como </span><strong data-position=\"4609\" data-size=\"0\"><span data-position=\"4611\" data-size=\"5\">Minio</span></strong><span data-position=\"4618\" data-size=\"3\"> e </span><strong data-position=\"4621\" data-size=\"0\"><span data-position=\"4623\" data-size=\"4\">CEPH</span></strong><span data-position=\"4629\" data-size=\"68\"> que são compatíveis com aplicações S3-Like, dentre outras soluções.</span></p>\n<p class=\"part in-view\" data-startline=\"69\" data-endline=\"69\" data-position=\"4699\" data-size=\"0\"><span data-position=\"4699\" data-size=\"130\">Além de tecnologias de bancos de chave-valor como <strong>ETCd</strong> que consegue armazenar e distribuir dados através dos nós do nosso cluster.</span></p>\n<p class=\"part in-view\" data-startline=\"71\" data-endline=\"71\" data-position=\"4831\" data-size=\"0\"><strong data-position=\"4831\" data-size=\"0\"><span data-position=\"4833\" data-size=\"28\">Passo 8: Stream e mensageria</span></strong></p>\n<p class=\"part in-view\" data-startline=\"73\" data-endline=\"73\" data-position=\"4865\" data-size=\"0\"><span data-position=\"4865\" data-size=\"191\">Existem excelentes soluções como <strong>NATs</strong> e <strong>gRPC</strong> para rodar em nossos clusters. O gRPC é uma solução universal de framework RPC e o NATS é um sistema de mensageria que nasceu na era Cloud Native.</span></p>\n<p class=\"part in-view\" data-startline=\"75\" data-endline=\"75\" data-position=\"5058\" data-size=\"0\"><strong data-position=\"5058\" data-size=\"0\"><span data-position=\"5060\" data-size=\"37\">Passo 9: Container Registry e Runtime</span></strong></p>\n<p class=\"part in-view\" data-startline=\"77\" data-endline=\"77\" data-position=\"5101\" data-size=\"0\"><span data-position=\"5101\" data-size=\"77\">Armazenar imagens de suas aplicações e dependências se torna fácil com Harbor.</span></p>\n<p class=\"part in-view\" data-startline=\"79\" data-endline=\"79\" data-position=\"5180\" data-size=\"0\"><span data-position=\"5180\" data-size=\"162\">Quer experimentar algum outro runtime diferente de Docker? Temos opções como <strong>Containerd</strong>, e <strong>CRI-O</strong> que podem substituir a altura e manter seus padrões cloud-native sem perder código já feito para o Docker.</span></p>\n<p class=\"part in-view\" data-startline=\"81\" data-endline=\"81\" data-position=\"5344\" data-size=\"0\"><strong data-position=\"5344\" data-size=\"0\"><span data-position=\"5346\" data-size=\"34\">Passo 10: Distribuição de software</span></strong></p>\n<p class=\"part in-view\" data-startline=\"83\" data-endline=\"83\" data-position=\"5384\" data-size=\"0\"><span data-position=\"5384\" data-size=\"121\">Caso precise distribuir software de forma segura, o projeto <strong>Notary</strong>, baseado no <strong>TUF</strong> (The Update Framework) pode te ajudar.</span></p>\n<p class=\"part in-view\" data-startline=\"85\" data-endline=\"85\" data-position=\"5507\" data-size=\"0\"><strong>Quer ver o mapa atualizado?</strong></p>\n<p class=\"part in-view\" data-startline=\"87\" data-endline=\"87\" data-position=\"5536\" data-size=\"0\"><a href=\"https://raw.githubusercontent.com/cncf/trailmap/master/CNCF_TrailMap_latest.png\" target=\"_blank\" rel=\"noopener\"><span data-position=\"5536\" data-size=\"79\">https://raw.githubusercontent.com/cncf/trailmap/master/CNCF_TrailMap_latest.png</span></a></p>\n<p class=\"part in-view\" data-startline=\"89\" data-endline=\"90\" data-position=\"5617\" data-size=\"0\"><span data-position=\"5617\" data-size=\"3\">[s]</span><br><span data-position=\"5621\" data-size=\"4\">Guto<br><br>--</span></p>\n<p>Este post é do tipo #MindNotes, entenda <a href=\"https://gutocarvalho.net/o-que-sao-mindnotes/\">aqui</a>.</p>\n<p>Se gostou manda um alo no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a>.</p>\n<p class=\"part in-view\" data-startline=\"89\" data-endline=\"90\" data-position=\"5617\" data-size=\"0\"><span data-position=\"5621\" data-size=\"4\"> </span></p>",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "MindNotes"
            ],
            "date_published": "2022-02-15T10:30:00-03:00",
            "date_modified": "2022-02-16T08:55:52-03:00"
        },
        {
            "id": "https://gutocarvalho.net/conheca-o-cloud-native-landscape/",
            "url": "https://gutocarvalho.net/conheca-o-cloud-native-landscape/",
            "title": "Conheça o Cloud Native Landscape",
            "summary": "<p>Entenda para que serve e como usar!</p>\n",
            "content_html": "<p>Entenda para que serve e como usar!</p>\n\n<p>Me siga no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a> e acompanhe meus posts sobre Cloud Native e CI/CD.</p>\n<p>Siga a <a href=\"https://twitter.com/CDeliveryFdn\">CD Foundation</a> e <a href=\"https://twitter.com/cloudnativefdn\">Cloud Native Foundation</a> no twitter.</p>\n<p>Revisor: <a href=\"https://twitter.com/rkpegoraro\">Ricardo Pegoraro</a><br><br><br></p>\n<hr>\n<figure class=\"post__image\"><br><br>Fala pessoa, tudo em paz?<br><br>Talvez você já tenha visto o Cloud Native Landscape, mas ainda tem dúvidas sobre ele.<br><br><img loading=\"lazy\"  src=\"https://gutocarvalho.net/media/posts/112/Screen-Shot-2022-02-15-at-10.11.44.png\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://gutocarvalho.net/media/posts/112/responsive/Screen-Shot-2022-02-15-at-10.11.44-xs.png 300w ,https://gutocarvalho.net/media/posts/112/responsive/Screen-Shot-2022-02-15-at-10.11.44-sm.png 480w ,https://gutocarvalho.net/media/posts/112/responsive/Screen-Shot-2022-02-15-at-10.11.44-md.png 768w\"  alt=\"\" width=\"1917\" height=\"876\"></figure>\n<p><strong>Para que serve isso?</strong><br><br>Esse landscape é um grande mapa de projetos que compõe esse universo <strong>Cloud Native</strong>, são centenas de <strong>projetos open source</strong> em constante expansão através de <strong>contribuições</strong> de suas <strong>comunidades</strong>.<br><br>O Landscape é uma grande vitrine de projetos. Essa vitrine te ajuda a encontrar soluções open source para seu projeto Cloud Native de forma simples e fácil.<br><br><strong>Como está organizado?</strong><br><br>O Landscape está separado em categorias e sub-categorias, sendo elas:<br><br>- <strong>App Definition And Development</strong><br>  - Database<br>  - Streaming &amp; Messaging<br>  - Application Definition &amp; Image Build<br>  - Continuous Integration &amp; Delivery<br><br><br>- <strong>Orchestration &amp; Management</strong><br>  - Scheduling &amp; Orchestration<br>  - Coordination &amp; Service Discovery<br>  - Remote Procedure Call<br>  - Service Proxy<br>  - API Gateway<br>  - Service Mesh<br><br>- <strong>Runtime</strong><br>  - Cloud Native Storage<br>  - Container Runtime<br>  - Cloud Native Network<br><br>- <strong>Provisioning</strong><br>  - Automation &amp; Configuration<br>  - Container Registry<br>  - Security &amp; Compliance<br>  - Key Management<br><br>- <strong>Special</strong><br>  - Kubernetes Certified Service Provider<br>  - Kubernetes Training Partner<br><br>- <strong>Plataform</strong><br>  - Certified Kubernetes Distribuition<br>  - Certified Kubernetes Hosted<br>  - Certified Kubernetes Installer<br><br>- <strong>Observabilty &amp; Analysis</strong><br>  - Monitoring<br>  - Logging<br>  - Tracing<br>  - Chaos Engineering<br><br><strong>Como usar?</strong><br><br>É simples, precisa de uma solução de <strong>storage</strong>, procure uma na seção de <strong>storage</strong>, precisa de um <strong>proxy</strong>, tem uma seção para isso, basta pesquisar, testar e encontrar a solução que se encaixa com seu projeto.<br><br><strong> Outros Landscapes<br></strong><br>E ainda temos dois projetos separados que também tem seus próprios landscapes<br>  <br>  - <strong><a href=\"https://landscape.cncf.io/serverless\">Serverless</a></strong> Landscape<br>  - <strong><a href=\"https://landscape.cd.foundation/\">CD.Foundation</a></strong> Landscape</p>\n<p><strong>Bora para os sites?</strong><br><br>Acesse o <a href=\"https://landscape.cncf.io/\">CNCF</a> Landspace<br>Acesse o <a href=\"https://landscape.cncf.io/serverless\">Serverless</a> Landscape<br>Acesse o <a href=\"https://landscape.cd.foundation/\">CD.Foundation</a> Landscape<br><br>[s]<br>Guto<br><br>--</p>\n<p>Este post é do tipo #MindNotes, entenda <a href=\"https://gutocarvalho.net/o-que-sao-mindnotes/\">aqui</a>.</p>\n<p>Se gostou manda um alo no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a>.</p>",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "MindNotes"
            ],
            "date_published": "2022-02-15T10:28:07-03:00",
            "date_modified": "2022-02-17T13:54:53-03:00"
        },
        {
            "id": "https://gutocarvalho.net/boas-praticas-git-para-pessoas-e-times/",
            "url": "https://gutocarvalho.net/boas-praticas-git-para-pessoas-e-times/",
            "title": "Boas práticas GIT para pessoas e times",
            "summary": "30 dicas especiais para Cloud Engineers. Para que seus commits não sejam&hellip;",
            "content_html": "<p>30 dicas especiais para Cloud Engineers.</p>\n<h2 id=\"o-básico\">O Básico</h2>\n<h3 id=\"1-configure-corretamente-nome-e-e-mail\">1. Configure corretamente nome e e-mail</h3>\n<p>Para que seus commits <strong>não</strong> sejam gravados com autor “root” e-mail “root@root” configure esses valores iniciais assim que instalar seu GIT.</p>\n<pre><code>$ git config --global user.name &quot;Nome Sobrenome&quot;\n$ git config --global user.email &quot;email@domain.ext&quot;\n</code></pre>\n<p>Pode acontecer de ter que mudar de e-mail dependendo do projeto, nesse caso rode isso dentro do diretório do seu projeto para sobrescrever as configurações globais</p>\n<pre><code>$ cd meu_projeto/\n$ git config user.name &quot;Nome Sobrenome&quot;\n$ git config user.email &quot;email@domain.ext&quot;\n</code></pre>\n<h3 id=\"2-configure-seu-editor-favorito-globalmente\">2. Configure seu editor favorito globalmente</h3>\n<p>Eu gosto de usar o VIM</p>\n<pre><code> $ git config --global core.editor vim\n</code></pre>\n<h3 id=\"3-ative-o-autocorrect\">3. Ative o autocorrect</h3>\n<p>O autocorrect vai te ajudar nos erros mais comuns, afinal quem nunca digitou git stats o bramch né?</p>\n<pre><code>$ git config --global help.autocorrect 10\n</code></pre>\n<p>olhe um exemplo quando digitamos BRAMCH ao invés de BRANCH</p>\n<pre><code>$ git bramch\nWARNING: You called a Git command named &#39;bramch&#39;, which does not exist.\nContinuing in 1.0 seconds, assuming that you meant &#39;branch&#39;.\ndev\nprod\n* main\n</code></pre>\n<p>olhe um exemplo quando digitamo STATS ao invés de STATUS</p>\n<pre><code>$ git stats\nWARNING: You called a Git command named &#39;stats&#39;, which does not exist.\nContinuing in 1.0 seconds, assuming that you meant &#39;status&#39;.\nOn branch gh-pages\nnothing to commit, working tree clean\n</code></pre>\n<p>É bastante útil não é?</p>\n<p>O valor <strong>10</strong> declara 10x10 décimos de segundo, o mesmo que 1 segundo e por aí vai. Caso queira que corrija automaticamente sem aguardar, use o valor 1.</p>\n<pre><code>$ git config --global help.autocorrect 1\n</code></pre>\n<p>Dessa forma ele vai digitar o comando para você, veja mais detalhes no link abaixo</p>\n<ul>\n<li><a href=\"https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration#_code_help_autocorrect_code\">https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration#_code_help_autocorrect_code</a></li>\n</ul>\n<h4 id=\"como-desligar-o-autocorrect\">como desligar o autocorrect?</h4>\n<pre><code>$ git config --global --unset help.autocorrect\n</code></pre>\n<h3 id=\"4-use-uma-versão-atualizada-do-git\">4. Use uma versão atualizada do GIT</h3>\n<p>Normalmente o GIT que vem nas distribuições linux é bem antigo então é uma boa ideia atualizar se quer usar recursos mais recentes e versões com mais performance.</p>\n<p>Se estiver no mac o Homebrew pode ajudar.</p>\n<pre><code>$ brew install git\n</code></pre>\n<p>Com isso você vai usar a última versão estável.</p>\n<h3 id=\"5-crie-aliases-para-agilizar-seu-trabalho\">5. Crie aliases para agilizar seu trabalho</h3>\n<p>Atalhos para mais produtividade, o Git oferece aliases para que possamos economizar alguns caracteres, veja como usar</p>\n<pre><code>$ git config --global alias.co checkout\n$ git co production\nSwitched to branch &#39;production&#39;\n</code></pre>\n<p>outro exemplo</p>\n<pre><code>$ git config --global alias.st status\n$ git st\nOn branch gh-pages\nnothing to commit, working tree clean\n</code></pre>\n<p>Uma outra forma de criar aliases é editar seu gitconfig e setar manualmengte</p>\n<pre><code>$ vim ~/.gitconfig\n</code></pre>\n<p>Adicione uma sessão com essa</p>\n<pre><code>[alias]\n    co = checkout\n    st = status\n</code></pre>\n<p>Simples e rápido!</p>\n<h2 id=\"junte-seu-time-e-defina-os-padrões-que-vão-usar\">Junte seu time e defina os padrões que vão usar</h2>\n<p>Agora que seu GIT já está atualizado e configurado vamos definir algumas coisas.</p>\n<h3 id=\"6-sente-com-seu-time-e-formalize-o-padrão-de-versionamento-que-vão-seguir\">6. Sente com seu time e formalize o padrão de versionamento que vão seguir</h3>\n<p>Combinar antes é sai mais barato do que arrumar depois, converse com seu time e defina:</p>\n<ul>\n<li>Convenções comuns</li>\n<li>Quais serão e como usar branchs de integração</li>\n<li>Quais serão e como usar branchs de features</li>\n<li>Quais serão e como usar demais branchs</li>\n<li>Padrão de nome de branchs para integração<ul>\n<li>feature-xyz, hotfix-xyz, stage, test, prod</li>\n</ul>\n</li>\n<li>Padrão esperado para commit, forma, mensagens </li>\n<li>Templates e forma de se fazer merge</li>\n<li>Regras gerais do que se deve ou se deve não fazer</li>\n</ul>\n<p>Eu sugiro que crie um repo git e coloque tudo isso em formato MD, nada melhor do que versionar suas regras :)</p>\n<h2 id=\"boas-práticas-com-branchs\">Boas práticas com branchs</h2>\n<h3 id=\"7-use-e-abuse-de-branchs\">7. Use e abuse de branchs</h3>\n<p>O recurso de branch é fantástico, você pode criar a partir de qualquer uma.</p>\n<p>Dicas principais:</p>\n<ul>\n<li>Evite gravar diretamente na main.</li>\n<li>Sempre trabalhe em uma branch separada</li>\n<li>Integre sua branch quando finalizar seu trabalho</li>\n<li>Apague sua branch depois que tiver terminado</li>\n</ul>\n<p>Exemplo</p>\n<pre><code>$ git branch -u main correcao_criacao_vpc\n$ git checkout correcao_criacao_vpc\n</code></pre>\n<p>Quando terminar seu ticket, apague a branch</p>\n<pre><code>$ git branch -D correcao_criacao_vpc\n</code></pre>\n<h3 id=\"8-use-branchs-de-integração\">8. Use branchs de integração</h3>\n<p>Quando estamos trabalhando com integração contínua o uso de <strong>branchs</strong> de <strong>integração</strong> é fundamental, precisamos integrar nosso código com o código de nossos colegas e rodar os testes na pipeline.</p>\n<p>Geralmente temos uma branch de integração para <strong>desenvolvimento</strong> e depois vamos promovendo esse código para outras branchs que vão nos ajudar a <strong>fechar a release e publicar</strong>, tudo depende do <strong>git-flow</strong> que seu time acordou e está seguindo.</p>\n<h3 id=\"9-não-escreva-direto-na-branch-main\">9. Não escreva direto na branch MAIN</h3>\n<p>Evitamos escrever direto na branch <strong>main</strong> pois geralmente é a última versão estável devidamente testada e validada por todos, é de fato a fonte da verdade, portanto, para colocar código lá devemos sempre passar por diversos testes em sua pipeline e revisões de seus colegas.</p>\n<h3 id=\"10-mantenha-sua-feature-branch-atualizada\">10. Mantenha sua feature-branch atualizada</h3>\n<p>Faça rebases regulares para garantir isso!</p>\n<p>Exemplo de atualização da branch main localmente e depois rebase</p>\n<pre><code>$ git checkout main\n$ git pull\n$ git checkout feature-xyz  \n$ git rebase main  \n</code></pre>\n<p>Exemplo de merge do código com a main</p>\n<pre><code>$ git checkout main\n$ git pull\n$ git merge feature-xyz\n</code></pre>\n<p>Hoje em dia eu quase não faço merge no braço, geralmente uso MR ou PR, depende da ferramenta que estamos usando. </p>\n<h3 id=\"11-de-vez-em-quando-recrie-suas-branchs-de-integração\">11. De vez em quando recrie suas branchs de integração</h3>\n<p>Isso é legal de fazer para dar uma limpada na coisa toda e começar novamente.</p>\n<pre><code>$ git checkout main\n$ git branch -D devel\n$ git branch -u main devel\n</code></pre>\n<h3 id=\"12-limpe-periodicamente-branchs-de-feature\">12. Limpe periodicamente branchs de feature</h3>\n<p>O ideal é sempre apagar suas branchs de feature ou de teste após finalizar um ticket.</p>\n<p>Apesar de ser o ideal, nem sempre lembramos, então de vez em quando é bom olhar e apagar branchs que não estão sendo usadas.</p>\n<p>Pode-se até definir um tempo de vida para branchs que não são fixas, e definindo isso podemos até criar uma automação para limpar o repo.</p>\n<h2 id=\"boas-práticas-com-commit\">Boas práticas com commit</h2>\n<h3 id=\"13-corrija-as-mensagens-do-seu-commit-se-errar\">13. Corrija as mensagens do seu commit se errar</h3>\n<p>Caso perceba algum typo na sua mensagem de commit, use o amend para corrigir</p>\n<pre><code> $ git commit -v --amend\n</code></pre>\n<h3 id=\"14-faça-commits-pontuais-e-objetivos\">14. Faça commits pontuais e objetivos</h3>\n<p>Evite fazer um commit com dezenas de arquivos, em especial se esses arquivos trazem mais de uma mudança ou correção. Devemos evitar isso pois fica difícil rastrear, entender e revisar o que foi feito no commit.</p>\n<p>Prefira fazer commits pequenos e pontuais de algo que está terminado, algo que funciona e que não traga muitas alterações de uma vez só.</p>\n<h3 id=\"15-faça-commits-atômicos-quando-possível\">15. Faça commits atômicos quando possível</h3>\n<p>Já sabemos que commitar poucas alterações é o melhor caminho, mas dá para ser ainda menor.</p>\n<p>Os commits atômicos são aqueles que gravam apenas uma única mudança – ainda que envolva vários arquivos – em um único commit.</p>\n<p>É claro que nem sempre dá para fazer, mas é uma prática excelente se conseguir fazer.</p>\n<p>A ideia do commit atômico é gravar a menor e mais importante melhoria que voce fez no código, sendo grande suficiente para adicionar algum valor, contudo, pequena o suficiente para ser gerenciada com  flexibilidade.</p>\n<p>Se quiser trabalhar dessa forma tenha em mente duas coisas:</p>\n<ul>\n<li>Trabalhe em uma coisa por vez</li>\n<li>Faça alterações pequenas e pontuais</li>\n</ul>\n<h3 id=\"16-faça-commits-regulares-e-frequentes\">16. Faça commits regulares e frequentes</h3>\n<p>Não espere demais!</p>\n<p>Algumas pessoas esperam demais até gravar alguma alteração, às vezes ficam ali melhorando algo que já está funcionando, buscando algum tipo de perfeição antes de gravar.</p>\n<p>Deixa eu te dizer uma coisa, o git funciona melhor e te ajuda mais quando você grava com frequência ao invés de esperar muitoooo tempo para gravar sua mudança. </p>\n<p>Ao gravar com frequência você vai rastrear inclusive como você foi melhorando aquele código ao longo do seu processo e histórico de desenvolvimento.</p>\n<p>E lembre-se, o GIT só cuida do seu código depois que você grava, se você fechar o editor por acidente ou se o editor travar, seu código já era, contudo, se estiver commitando com frequência você evita isso.</p>\n<h3 id=\"17-quebre-seu-commit-em-commits-menores\">17. Quebre seu commit em commits menores</h3>\n<p>As vezes a gente vai trabalhando e se empolga demais, e com isso acaba fazendo mais de uma alteração em um mesmo arquivo, e neste caso,  tais alteraçoes que poderiam ser commitadas de forma separada. Se for esse o caso, o commando abaixo te permite escolher quais mudanças você deseja commitar em um determinado arquivo.</p>\n<pre><code>$ git add -p &lt;nome_do_arquivo&gt;\n</code></pre>\n<p>Assim vamos conseguir commitar pequenas porções do arquivo por vez.</p>\n<h3 id=\"18-não-faça-commit-de-algo-que-você-não-finalizou\">18. Não faça commit de algo que você não finalizou</h3>\n<p><strong>Nunca</strong>, eu repito, <strong>nunca</strong> grave algo que não está funcionando ou que não está completo.</p>\n<h3 id=\"19-teste-seu-código-antes-de-gravar\">19. Teste seu código antes de gravar</h3>\n<p>Essa é uma das coisas mais básicas que vou falar hoje, mas tem que falar e tem que fazer.</p>\n<p>Caso não saiba, gravar código quebrado é algo bastante incômodo, poderá irritar seus colegas, podendo em alguns casos chegar a ser considerado uma falta de respeito e falta de profissionalismo.</p>\n<p>Verifique a sintaxe do seu código, rode um linter e execute o código para ver se o que fez está funcionando, seja uma feature, seja um bugfix, seja um hotfix, afinal, se o código estiver funcionando e se sua solução resolver o ticket, isso será o melhor dos mundos.</p>\n<p>O git inclusive oferece um sistema de HOOKS que permite por exemplo, executar comandos de checagem antes de de gravar seu código, nesse caso estou falando do hook “pre-commit”, veja o link abaixo e leia sobre esse e outros hooks, é um recurso muito útil, acredite.</p>\n<ul>\n<li><a href=\"https://git-scm.com/docs/githooks\">https://git-scm.com/docs/githooks</a></li>\n</ul>\n<h3 id=\"20-escreva-mensagens-de-commit-claras\">20. Escreva mensagens de commit claras</h3>\n<p>As mensagens precisam fazer sentido e ser úteis para todos do time.</p>\n<h4 id=\"201-commitando-em-uma-linha\">20.1 Commitando em uma linha</h4>\n<p>A mensagem tem que fazer sentido, ser fácil de ler e ser suficiente para entender o que foi feito.</p>\n<h5 id=\"exemplos\">Exemplos</h5>\n<p>Podemos usar convenções para mostrar que fizemos uma <strong>correção</strong></p>\n<pre><code>fix: corrige bug quando modulo vai crair a 2o VPC na AWS\n</code></pre>\n<p>ou uma <strong>refatoração</strong></p>\n<pre><code>refact: refatora código que configura IAM para EKS na AWS\n</code></pre>\n<p>ou uma <strong>documentação</strong></p>\n<pre><code>doc: adiciona docs para uso do modulo IAM/EKS\n</code></pre>\n<p>ou que inserimos <strong>testes</strong></p>\n<pre><code>test: adiciona testes unitários no módulo\n    \n</code></pre>\n<p>ou que criamos uma nova <strong>feature</strong></p>\n<pre><code>feat: adiciona recurso para lidar com ALB no EC2/AWS\n</code></pre>\n<h5 id=\"entendendo-a-estrutura\">Entendendo a estrutura</h5>\n<p>É simples</p>\n<pre><code>feat: adiciona fature para recursos ALB no EC2/AWS #220412\n^--^  ^-----------------------------------------^\n|     |\n|     +-&gt; Sumário da sua mudança\n|\n+-------&gt; Tipo: docs, feat, fix, refact, ou test.\n</code></pre>\n<p>Se você estiver usando um sistema de tickets junto, adicione o número do ticket na mensagem, sistemas como GitLab e GitHub já farão a associação para você entre a issue e o commit.</p>\n<p>Evite colocar ponto final na mensagem, afinal é um título.</p>\n<p>Vale lembrar que você deve evitar escrever mais de 50 caracteres ou vai quebrar a saída do “git log”.</p>\n<h5 id=\"de-que-modo-escrever-a-mensagem\">De que modo escrever a mensagem?</h5>\n<p>Em alguns blogs vocês verão pessoas que defendam usar verbos no imperativo ou presente do indicativo, e faz sentido. Em ambos os casos a ideia é que o commit responda essa pergunta:</p>\n<pre><code>  &quot;Em caso de aplicar esse commit ele...&quot;\n</code></pre>\n<p>Resposta</p>\n<pre><code>...altera código X\n...corrige módulo Y\n...refatora manifesto Z\n...cria feature W para módulo X\n</code></pre>\n<p>Eu já gosto de usar particípio do passado, pois foi algo que já foi realizado e nem precisa fazer a perguntinha para ver como tem que escrever, neste caso você pode afirmar ao invés de perguntar, dessa forma:</p>\n<pre><code>&quot;Nesse commit foi...&quot;\n</code></pre>\n<p>Resposta</p>\n<pre><code>...alterado código X\n...corrigido módulo Y\n...refatorado manifesto Z\n...criada a feature W para módulo X\n</code></pre>\n<p>Enfim, existem longas threads sobre isso na internet, quase uma guerra santa, contudo, IMHO isso vai depender de cada um, ou da forma como cada time decidiu trabalhar.</p>\n<p>No final o importante é você versionar seu código e conseguir entender o que fez ali lendo a mensagem de commit :)</p>\n<h4 id=\"202-usando-o-editor-para-algo-mais-detalhado\">20.2 Usando o editor para algo mais detalhado</h4>\n<p>As vezes precisamos escrever um pouco mais, indo além do “one line commit”, especialmente se foi uma correção complexa, se tem alguma pegadinha, ou se for preciso explicar porque você fez aquilo daquela forma. No caso do trabalho e o dia-a-dia dos Cloud Engineers nem sempre é necessário, mas se for, veja como fazer.</p>\n<p>Nesse caso, como é uma mensagem longa, não podemos fazer “one line commit”, temos que ir para o editor.</p>\n<pre><code>$ git commit\n</code></pre>\n<p>E escrever a mensagem</p>\n<pre><code>Assunto da mensagem com no máximo 50 caracteres, sem ponto final\n\nDescrição em múltiplas linhas\nsobre seu commit. Use até 72 caracteres\n\nOutros parágrafos podem vir após inserir \numa linha em branco\nAqui nao tem mais limite de caracteres\n\nPodemos usar bullets também, ajuda a organizar a informação\n\n- Enumerando\n- Alterações\n- Realizadas\n- Por\n- Este\n- Commit\n\nSe existe um ticket coloque \no número dele na mensagem e os tickets relacionados\n\nEsse commit resolve o problema do ticket #2222\nE está relacionado com o ticket #3333 e #4444\n</code></pre>\n<p>É bem simples!</p>\n<h3 id=\"21-não-reescreva-o-histórico-da-branch-principal\">21. Não reescreva o histórico da branch principal</h3>\n<p>Se você já gravou o código na branch principal, e o código alterado já está disponível para outras pessoas verem, recomenda-se não alterar esse histórico.</p>\n<p>Fazer rebase na MAIN ou qualquer que seja o nome da sua branch upstream, ou mesmo em uma branch de integração pode causar problemas para seus colegas e eles podem ter que lidar com conflitos ou ter que fazer stash e baixar toda a branch novamente. Fora que normalmente alterações nessas branchs geralmente acionam gatilhos em ferramentas de CICD, o que pode gerar um deploy com regressão.</p>\n<p>Dito isso, muito cuidado com suas branchs, em especial a upstream e as branchs de integração.</p>\n<p>Na sua branch de feature você faz o que quiser, use o rebase sem problema algum, mas só nela ok?</p>\n<h2 id=\"boas-práticas-com-merge\">Boas práticas com merge</h2>\n<h3 id=\"22-faça-squash-antes-de-fazer-um-merge\">22. Faça squash antes de fazer um merge</h3>\n<p>Antes de fazer um merge verifique seu histórico de commit, veja se é possível melhorar o histórico, reduzir e juntar algumas coisas, as vezes 20 commits podem ser agrupados em 10, fica mais limpo, organizado e facilitará a revisão por seus pares.</p>\n<pre><code>$ git rebase -i HEAD~20  # apresenta os últimos 20 commits para fazer o squash\n</code></pre>\n<p>Faça o squash na sua branch de trabalho antes de mandar o PR/MR e altere apenas os seus commits ok?</p>\n<h3 id=\"23-use-e-abuse-de-mrs-e-prs-no-github-e-gitlab\">23. Use e abuse de MRs e PRs no GitHub e GitLab</h3>\n<p>A vantagem de usar PR ou MR seja no GitLab ou GitHub é que você tem facilidades para fazer squash, resolver conflitos, enxergar o que mudou (diff), solicitar revisão de pares, receber comentários e então finalmente fazer o merge. São excelentes recursos e devemos usá-los pois facilitam nossa vida.</p>\n<h2 id=\"outras-coisas-interessantes\">Outras coisas interessantes</h2>\n<h3 id=\"24-use-nomes-consistentes-para-seus-remotes\">24. Use nomes consistentes para seus remotes</h3>\n<p>Origin é um nome padrão, mas não é obrigatório tá?</p>\n<pre><code>$ git push origin main\n</code></pre>\n<p>Podemos mudar esse nome para dar mais contexto e ficar mais claro de qual remote estamos falando</p>\n<pre><code>$ git push gitlab main\n$ git push github main\n$ git push bitbucket main\n$ git push clienteX main\n</code></pre>\n<p>Colocar um contexto no nome do remote ajuda bastante, especialmente se tem vários remotes.</p>\n<h3 id=\"25-prefira-autenticação-ssh-ao-invés-de-usersenha\">25. Prefira autenticação SSH ao invés de user/senha</h3>\n<p>Autenticação através de chaves é mais segura, tanto que algumas ferramentas como GitHub desabilitam push em outros métodos.</p>\n<h4 id=\"criando-uma-chave-ssh-segura-ed2559\">Criando uma chave ssh segura (ed2559)</h4>\n<p>Como criar um chave segura?</p>\n<pre><code>$ ssh-keygen -o -a 100 -t ed25519 -f ~/.ssh/nome_da_sua_chave -C “nome@domain.ext”\n</code></pre>\n<p>Quer saber por que usar o  ed25519?</p>\n<p>Basicamente pois é um algoritmo mais moderno que usa curvas elípiticas, mais performático comparado com outras alternativas.</p>\n<p>Se quiser saber mais mergulhe nesse post!</p>\n<ul>\n<li><a href=\"https://medium.com/risan/upgrade-your-ssh-key-to-ed25519-c6e8d60d3c54\">https://medium.com/risan/upgrade-your-ssh-key-to-ed25519-c6e8d60d3c54</a></li>\n</ul>\n<h4 id=\"definindo-o-uso-de-chaves-ssh-para-repos-específicos\">Definindo o uso de chaves ssh para repos específicos</h4>\n<p>No meu caso eu trabalho com várias chaves ssh, uma para projetos pessoais, uma para projetos na empresa que trabalho e sempre crio chaves para projetos ou freelas que eu estou fazendo.</p>\n<p>É sempre bom evitar usar a mesma chave para tudo.</p>\n<p>Mas como organizar isso?</p>\n<p>Simples edite o arquivo ~/.ssh/config e configure a chave para cada server </p>\n<pre><code>Host nativeltrail_gitlab\n  Hostname gitlab.nativetrail.io\n  User git\n  IdentityFile ~/.ssh/id_ed2559_gitlab_nativetrail_key\n\nHost client_x_gitlab\n  Hostname gitlab.cliente-x.com\n  User git\n  IdentityFile ~/.ssh/id_ed2559_gitlab_clientex_key\n  \nHost gitlab\n  Hostname gitlab.com\n  User git\n  IdentityFile ~/.ssh/id_ed2559_gitlab_key \n\nHost github\n  Hostname github.com\n  User git\n  IdentityFile ~/.ssh/id_ed2559_github_key  \n</code></pre>\n<p>Pronto, diferentes chaves para diferentes servidores e serviços.</p>\n<h3 id=\"26-use-e-abuse-do-gitignore\">26. Use e abuse do .Gitignore</h3>\n<p>O Gitignore é um arquivo essencial em nosso repositório, é através dele que dizemos para o GIT ignorar alguns arquivos e não versioná-los.</p>\n<p>O Github traz uma bela coleção de templates para isso, veja no link abaixo:</p>\n<ul>\n<li><a href=\"https://github.com/github/gitignore\">https://github.com/github/gitignore</a></li>\n</ul>\n<h4 id=\"usando-o-gitignore-local\">usando o gitignore local</h4>\n<p>neste caso crie na raiz do diretorio um arquivo com o nome .gitignore e insira o que deseja ignorar.</p>\n<pre><code>_site\n_temp\n_build\n*.zip\n*.tar.gz\n</code></pre>\n<p>e pronto, seu git vai ignorar esses padroes, saiba mais na documentação:</p>\n<ul>\n<li><a href=\"https://git-scm.com/docs/gitignore\">https://git-scm.com/docs/gitignore</a></li>\n</ul>\n<h4 id=\"usando-o-gitignore-global\">usando o gitignore global</h4>\n<p>Esse arquivo é global e todos os projetos vão ler ele, é bem útil para coisas comuns e para projetos que ainda não tem um .gitignore construído</p>\n<p>Criando o arquivo</p>\n<pre><code>$ touch ~/caminho/para/seu/global/.gitignore\n</code></pre>\n<p>Ativando via CLI</p>\n<pre><code>$ git config --global core.excludesFile ~/caminho/para/seu/global/.gitignore\n</code></pre>\n<p>Caso prefira edite seu .gitconfig diretamente e insira a configuração</p>\n<pre><code>[core]\n  excludesFile = ~/caminho/para/seu/global/.gitignore\n</code></pre>\n<p>No mac eu uso esse conteúdo</p>\n<pre><code># General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# Files that might appear on external disks\n.Spotlight-V100\n.Trashes\n\n# Vscode\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n!.vscode/*.code-snippets\n\n# Local History for Visual Studio Code\n.history/\n\n# Built Visual Studio Code Extensions\n*.vsix\n</code></pre>\n<h3 id=\"27-use-tags-para-criar-referências-no-seu-histórico\">27. Use tags para criar referências no seu histórico</h3>\n<p>Tags que identificam milestones</p>\n<pre><code>$ git tag milestone-id -m\n$ git push --tags\n</code></pre>\n<p>Tags que identificam um estado</p>\n<pre><code>$ git tag stable -m\n$ git push --tags\n</code></pre>\n<p>Tags que identificam versões</p>\n<pre><code>$ git tag v1.2.3 -m\n$ git push --tags\n</code></pre>\n<p>Existem várias formas de usar tags, seu uso facilita a identificação de um momento específico em seu histórico de desenvolvimento, tal como o fechamento de uma release, a conclusão de um milestones, a identifição e uma versão, o que possibilita que façamos clone do código naquele momento exato.</p>\n<h3 id=\"28-se-possível-use-versionamento-semântico\">28. Se possível use versionamento semântico</h3>\n<p>Caso não conheça acessa o site <a href=\"https://semver.org\">https://semver.org</a></p>\n<p>O versionamento semântico consiste basicamente no uso de três numeros que podem ser incrementados, como o exemplo abaixo:</p>\n<pre><code>2.3.5\n</code></pre>\n<h5 id=\"major\">MAJOR</h5>\n<p>O primeiro número é chamado de <strong>major</strong>, ele deve ser incrementando quando alguma mudança causa uma quebra de compatilidade de API</p>\n<h5 id=\"minor\">MINOR</h5>\n<p>O segundo número é chamado de <strong>minor</strong>, ele deve ser incrementado quando uma nova funcionalidade é adicionada, sem quebra de compatibilidade</p>\n<h5 id=\"patch\">PATCH</h5>\n<p>O terceiro número é chamado de <strong>patch,</strong> ele deve ser incrementado quando fazemos algum tipo de correção na versão minor</p>\n<h5 id=\"buildrelease\">BUILD/RELEASE</h5>\n<p>Ao ler o semver.org você verá outras possibilidades de versionar, usando build number e release name, veja alguns exemplos:</p>\n<pre><code>1.0.0-alpha\n1.0.0-beta\n1.0.0-rc1\n1.0.0-rc2\n1.0.0+20130313144700\n1.0.0-0.3.7\n</code></pre>\n<p>O versionamento semântico é bem flexível e fácil de usar, você vai ver.</p>\n<h4 id=\"posso-automatizar-o-incremento-de-versão\">Posso automatizar o incremento de versão?</h4>\n<p>Como as regras são claras fica fácil entender como incrementar a versões manualmente e podemos até mesmo automatizar isso em nossa pipeline.</p>\n<h4 id=\"posso-criar-o-meu-próprio-método\">Posso criar o meu próprio método?</h4>\n<p>Claro, cada time pode definir seu jeito de versionar, mas lembre-se criar um repo onde você explica isso para todo mundo, em formato MD. :)</p>\n<h3 id=\"29-cuidado-com-push-usando-force\">29. Cuidado com Push usando FORCE</h3>\n<p>Quando você manda um</p>\n<pre><code>$ git push origin main --force\n</code></pre>\n<p>Você está sobrescrevendo tudo que tem no ORIGIN na branch MAIN.</p>\n<p>Todo o cuidado é pouco, se for fazer avise a turma, peça permissão e faça um backup antes.</p>\n<h4 id=\"quais-problemas-isso-pode-gerar\">Quais problemas isso pode gerar?</h4>\n<p>Se alguém fez um push e você não atualizou sua branch local, os commits do coleginha serão perdidos.</p>\n<p>Se alguém fez um clone e você mandou um force removendo várias coisas, no próximo pull o coleginha vai lidar com conflitos ou coisas piores, talvez tenha até que apagar o repo e baixar novamente.</p>\n<p>Isso pode gerar algumas situações chatas com seu time, tome cuidado, use com cuidado.</p>\n<h3 id=\"30-aprenda-mais-sobre-o-git-e-pratique\">30. Aprenda mais sobre o GIT e pratique</h3>\n<p>Aprender, entender e usar boas práticas vem com a experiência do dia a dia, quanto mais ler para conhecer seus recursos, quanto mais usar, mais precisará aprender, é assim que funciona.</p>\n<p>Então vai lá e estuda!</p>\n<ul>\n<li><a href=\"https://git-scm.com/book/en/v2\">https://git-scm.com/book/en/v2</a></li>\n</ul>\n<p>Sucesso!</p>\n<h2 id=\"refs\">Refs</h2>\n<ul>\n<li><a href=\"https://deepsource.io/blog/git-best-practices/\">https://deepsource.io/blog/git-best-practices/</a></li>\n<li><a href=\"https://opensource.com/article/20/7/git-best-practices\">https://opensource.com/article/20/7/git-best-practices</a></li>\n<li><a href=\"https://cbea.ms/git-commit\">https://cbea.ms/git-commit</a></li>\n<li><a href=\"https://github.com/git-tips/tips\">https://github.com/git-tips/tips</a></li>\n<li><a href=\"https://codeburst.io/git-tips-and-tricks-to-improve-your-git-workflow-3f8652fa4a62\">https://codeburst.io/git-tips-and-tricks-to-improve-your-git-workflow-3f8652fa4a62</a></li>\n</ul>\n<p>[s]<br>\nGuto</p>\n<p>Se gostou manda um alo no twitter <a href=\"https://twitter.com/gutocarvalho\">@gutocarvalho</a>.</p>\n",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "TLDR"
            ],
            "date_published": "2022-02-11T09:35:32-03:00",
            "date_modified": "2022-02-16T17:17:23-03:00"
        }
    ]
}
