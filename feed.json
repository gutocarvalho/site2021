{
    "version": "https://jsonfeed.org/version/1",
    "title": "Guto@Site",
    "description": "",
    "home_page_url": "https://gutocarvalho.net",
    "feed_url": "https://gutocarvalho.net/feed.json",
    "user_comment": "",
    "author": {
        "name": "Guto Carvalho"
    },
    "items": [
        {
            "id": "https://gutocarvalho.net/baixando-imagens-de-ecr-privado-no-k8s/",
            "url": "https://gutocarvalho.net/baixando-imagens-de-ecr-privado-no-k8s/",
            "title": "DROPS: Baixando imagens de ECR Privado no K8S",
            "summary": "Aprenda a pegar imagens de registry ECR privado em seu cluster K8S.",
            "content_html": "<p>Aprenda a pegar imagens de registry ECR privado em seu cluster K8S.</p>\n<hr>\n<h3 id=\"o-que-são-drops\">O que são drops?</h3>\n<p>São DUMPs mentais rápidos e rasteiros, simples e objetivos – que funcionam. </p>\n<p>Geralmente de algo que eu acabei de fazer.</p>\n<p>Eu – quase sempre – volto para detalhar mais cada passo.</p>\n<p>Considere com a mesma qualidade de um rascunho ou uma anotação rápida.</p>\n<p>De qualquer forma comenta ai qquer coisa, os comentários estão ligados nos DROPS ;)</p>\n<h3 id=\"demanda\">Demanda!</h3>\n<p>Precisamos cadastrar um secret para pegar imagens de um ECR privado</p>\n<h3 id=\"comofaz\">ComoFaz?</h3>\n<p>Primeiro vamos gerar o TOKEN, você precisa do AWS CLI para isso,</p>\n<pre><code>aws configure\n</code></pre>\n<p>depois de configurado gere o TOKEN</p>\n<pre><code>aws ecr get-login-password --region us-east-1\n</code></pre>\n<p>agora vamos no K8S criar o secret</p>\n<pre><code>kubectl create secret docker-registry gr1d-ecr \\\n  --docker-server=ID.dkr.ecr.us-east-1.amazonaws.com/ \\\n  --docker-username=AWS \\\n  --docker-password=SEU_TOKEN_GERADO_VIA_AWS_CLI \\\n  --namespace=ecr-nativetrail\n</code></pre>\n<p>verifique</p>\n<pre><code>kubectl get secrets -n gr1d|grep ecr\n</code></pre>\n<p>saída</p>\n<pre><code>ecr-nativetrail kubernetes.io/dockerconfigjson        1      15h\n</code></pre>\n<p>Nao se esqueça de setar nos eu deployment, dentro de “spec” o secret</p>\n<pre><code>imagePullSecrets:\n- name: ecr-nativetrail\n</code></pre>\n<p>Prontinho!</p>\n",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "K8S",
                   "Drops"
            ],
            "date_published": "2021-10-14T12:39:31-03:00",
            "date_modified": "2021-10-14T12:40:21-03:00"
        },
        {
            "id": "https://gutocarvalho.net/storageclass-ebs-em-seu-cluster-k8s-ec2/",
            "url": "https://gutocarvalho.net/storageclass-ebs-em-seu-cluster-k8s-ec2/",
            "title": "DROPS: Storage EBS em seu Cluster K8S EC2",
            "summary": "Aprenda a usar o storage EBS como SC em seu cluster EC2!&hellip;",
            "content_html": "<p>Aprenda a usar o storage EBS como SC em seu cluster EC2!</p>\n<hr>\n<h3 id=\"o-que-são-drops\">O que são drops?</h3>\n<p>São DUMPs mentais rápidos e rasteiros, simples e objetivos – que funcionam. </p>\n<p>Geralmente de algo que eu acabei de fazer.</p>\n<p>Eu – quase sempre – volto para detalhar mais cada passo.</p>\n<p>Considere com a mesma qualidade de um rascunho ou uma anotação rápida.</p>\n<p>De qualquer forma comenta ai qquer coisa, os comentários estão ligados nos DROPS ;)</p>\n<h3 id=\"vamos-lá\">Vamos lá!</h3>\n<p>crie o arquivo aws-ebs-secrets.yaml</p>\n<pre><code>vim ws-ebs-secrets.yaml\n</code></pre>\n<p>insira o conteúdo abaixo, e ajuste suas credenciais</p>\n<pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: aws-secret\n  namespace: kube-system\nstringData:\n  key_id: &quot;SUA_ACCESS_KEY&quot;\n  access_key: &quot;SUA_SECRET_KEY&quot;\n</code></pre>\n<p>aplique o manifesto</p>\n<pre><code>kubectl apply -f aws-ebs-secrets.yaml\n</code></pre>\n<p>agora instale o driver ebs</p>\n<pre><code>kubectl apply -k &quot;github.com/kubernetes-sigs/aws-ebs-csi-driver/deploy/kubernetes/overlays/stable/?ref=release-1.4&quot;\n</code></pre>\n<p>saída esperada</p>\n<pre><code>serviceaccount/ebs-csi-controller-sa created\nserviceaccount/ebs-csi-node-sa created\nclusterrole.rbac.authorization.k8s.io/ebs-csi-node-role created\nclusterrole.rbac.authorization.k8s.io/ebs-external-attacher-role created\nclusterrole.rbac.authorization.k8s.io/ebs-external-provisioner-role created\nclusterrole.rbac.authorization.k8s.io/ebs-external-resizer-role created\nclusterrole.rbac.authorization.k8s.io/ebs-external-snapshotter-role created\nclusterrolebinding.rbac.authorization.k8s.io/ebs-csi-attacher-binding created\nclusterrolebinding.rbac.authorization.k8s.io/ebs-csi-node-getter-binding created\nclusterrolebinding.rbac.authorization.k8s.io/ebs-csi-provisioner-binding created\nclusterrolebinding.rbac.authorization.k8s.io/ebs-csi-resizer-binding created\nclusterrolebinding.rbac.authorization.k8s.io/ebs-csi-snapshotter-binding created\ndeployment.apps/ebs-csi-controller created\npoddisruptionbudget.policy/ebs-csi-controller created\ndaemonset.apps/ebs-csi-node created\ncsidriver.storage.k8s.io/ebs.csi.aws.com created\n</code></pre>\n<p>verifique se tá tudo bem</p>\n<pre><code>kubectl get pods -n kube-system|grep ebs\n</code></pre>\n<p>saída esperada</p>\n<pre><code>ebs-csi-controller-7c486f7676-826ph        6/6     Running     0          110s\nebs-csi-controller-7c486f7676-l5wsg        6/6     Running     0          110s\nebs-csi-node-5q7lk                         3/3     Running     0          108s\nebs-csi-node-cxv4p                         3/3     Running     0          109s\nebs-csi-node-fskfw                         3/3     Running     0          108s\n</code></pre>\n<p>tá tudo bem, agora crie o manifesto do storageclass</p>\n<pre><code>vim ebs-storageclass.yaml\n</code></pre>\n<p>insira o conteúdo abaixo</p>\n<pre><code>kind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: ebs-storageclass\nparameters:\n  type: gp2\nprovisioner: ebs.csi.aws.com\nvolumeBindingMode: WaitForFirstConsumer\n</code></pre>\n<p>aplique o manifesto</p>\n<pre><code>kubectl apply -f ebs-storageclass.yaml\n</code></pre>\n<p>verifique se criou o sc</p>\n<pre><code>kubectl get sc\n</code></pre>\n<p>saída esperada</p>\n<pre><code>NAME                         PROVISIONER       RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE\nebs-storageclass             ebs.csi.aws.com   Delete          WaitForFirstConsumer   false                  3m24s\n</code></pre>\n<p>caso queira, defina este sc como default</p>\n<pre><code>  kubectl patch storageclass ebs-storageclass -p &#39;{&quot;metadata&quot;: {&quot;annotations&quot;:{&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;}}}\n</code></pre>\n<p>prontinho! :)</p>\n",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "K8S",
                   "Drops"
            ],
            "date_published": "2021-10-13T18:45:57-03:00",
            "date_modified": "2021-10-14T12:39:36-03:00"
        },
        {
            "id": "https://gutocarvalho.net/drops-criando-um-eks-basico-via-terraform/",
            "url": "https://gutocarvalho.net/drops-criando-um-eks-basico-via-terraform/",
            "title": "DROPS: Criando um eks básico via terraform",
            "summary": "Aprenda a criar um cluster EKS básico via Terraform! Só vem :”)&hellip;",
            "content_html": "<p>Aprenda a criar um cluster EKS básico via Terraform! Só vem :”)</p>\n<h3 id=\"o-que-são-drops\">O que são drops?</h3>\n<p>São DUMPs mentais rápidos e rasteiros, simples e objetivos – que funcionam. </p>\n<p>Geralmente eu volto para detalhar mais cada passo – com o devido tempo.</p>\n<p>Considere com a mesma qualidade de um rascunho ou uma anotação rápida.</p>\n<p>De qualquer forma comenta ai qquer coisa, os comentários estão ligados nos DROPS ;)</p>\n<hr>\n<h3 id=\"requisitos\">requisitos</h3>\n<p>Tenha kubeclt e helm instalados.</p>\n<p>Tenha o awscli e aws-iam-authenticator instalados.</p>\n<p>Esteja logado com aws-cli na conta correta com permissoes para criar o EKS.</p>\n<p>Quais permissões?</p>\n<ul>\n<li><a href=\"https://github.com/terraform-aws-modules/terraform-aws-eks/blob/master/docs/iam-permissions.md\">https://github.com/terraform-aws-modules/terraform-aws-eks/blob/master/docs/iam-permissions.md</a></li>\n</ul>\n<h3 id=\"crie-um-diretório-para-seu-projeto\">crie um diretório para seu projeto</h3>\n<pre><code>mkdir -p terraform/eks/meucluster\ncd terraform/eks/meucluster\n</code></pre>\n<h3 id=\"crie-o-arquivo-para-definir-as-versões-dos-módulos\">crie o arquivo para definir as versões dos módulos</h3>\n<p>edite o arquiovo</p>\n<pre><code>vim defaults.tf\n</code></pre>\n<p>insira o conteúdo abaixo para definir der forma clara as versões que vamos usar</p>\n<pre><code>terraform {\n  required_version = &quot;&gt;= 0.13.1&quot;\n\n  required_providers {\n    aws        = &quot;&gt;= 3.62.0&quot;\n    local      = &quot;&gt;= 2.1.0&quot;\n    kubernetes = &quot;&gt;= 2.5.0&quot;\n    cloudinit  = &quot;&gt;= 2.2.0&quot;\n    http = {\n      source  = &quot;terraform-aws-modules/http&quot;\n      version = &quot;&gt;= 2.4.1&quot;\n    }\n  }\n}\n\nprovider &quot;aws&quot; {\n  region  = &quot;us-east-1&quot;\n}\n\ndata &quot;aws_caller_identity&quot; &quot;current&quot; {} # used for accesing Account ID and ARN\n</code></pre>\n<p>valide</p>\n<pre><code>terraform validate\n</code></pre>\n<p>saída esperada</p>\n<pre><code>Success! The configuration is valid.\n</code></pre>\n<h3 id=\"crie-o-arquivo-com-as-variáveis-que-vão-configurar-a-vpc-e-o-eks\">crie o arquivo com as variáveis que vão configurar a vpc e o eks</h3>\n<p>crie o arquivo</p>\n<pre><code>vim configs.tfvars\n</code></pre>\n<p>coloque o conteúdo</p>\n<pre><code>## configuracoes para vpc\n\ncluster_name            = &quot;hackathon&quot;\nname_prefix             = &quot;hackathon&quot;\nmain_network_block      = &quot;10.0.0.0/16&quot;\nsubnet_prefix_extension = 4\nzone_offset             = 8\n\n## configuracoes para eks\n\neks_cluster_version = &quot;1.21&quot;\n\nnode_group_default_disk_size = 30\nnode_group_default_ami_type = &quot;AL2_x86_64&quot;\n    \nnode_group_desired_capacity = 1\nnode_group_max_capacity = 8\nnode_group_min_capacity = 1\nnode_group_max_unavailable_percentage = 50\n    \nnode_group_capacity_type = &quot;ON_DEMAND&quot;\nnode_group_instance_type = &quot;t3.large&quot;\n</code></pre>\n<p>valide</p>\n<pre><code>terraform validate\n</code></pre>\n<p>saída esperada</p>\n<pre><code>Success! The configuration is valid.\n</code></pre>\n<h3 id=\"crie-o-manifesto-que-vai-criar-e-configurar-a-vpc\">crie o manifesto que vai criar e configurar a VPC</h3>\n<p>vamos criar agora a vpc</p>\n<pre><code>vim vpc.tl\n</code></pre>\n<p>insira o conteúdo abaixo</p>\n<pre><code># Declarando variaveis\n\nvariable &quot;cluster_name&quot; {\n  type        = string\n  description = &quot;Nome do Cluster&quot;\n}\n\nvariable &quot;name_prefix&quot; {\n  type        = string\n  description = &quot;Prefixo que será utilizado nos nomes dos objetos de infraestrutura criados na AWS&quot;\n}\n\nvariable &quot;main_network_block&quot; {\n  type        = string\n  description = &quot;Bloco CIDR base que sera usado em sua VPC&quot;\n}\n\nvariable &quot;subnet_prefix_extension&quot; {\n  type        = number\n  description = &quot;Bits de extensao do seu bloco CIDR que sera usado para calcular as suberedes&quot;\n}\n\nvariable &quot;zone_offset&quot; {\n  type        = number\n  description = &quot;Offset de extensao dos bits CIDR para calculo e subnets, para evitar colisoes entre redes publicas e privadas&quot;\n}\n\n# Fixando o IP do Nat Gateway\n\nresource &quot;aws_eip&quot; &quot;nat_gw_elastic_ip&quot; {\n  vpc = true\n  tags = {\n    Name            = &quot;${var.cluster_name}-nat-eip&quot;\n  }\n}\n\n# Criando a VPC usando configs do modulo oficial AWS\n\nmodule &quot;vpc&quot; {\n  source  = &quot;terraform-aws-modules/vpc/aws&quot;\n\n  name = &quot;${var.name_prefix}-vpc&quot;\n  cidr = var.main_network_block\n  azs  = [ &quot;us-east-1a&quot;, &quot;us-east-1b&quot;, &quot;us-east-1c&quot;, &quot;us-east-1d&quot; ]\n\n  private_subnets      = [&quot;10.0.1.0/24&quot;, &quot;10.0.2.0/24&quot;, &quot;10.0.3.0/24&quot;, &quot;10.0.4.0/24&quot; ]\n  public_subnets       = [&quot;10.0.5.0/24&quot;, &quot;10.0.6.0/24&quot;, &quot;10.0.7.0/24&quot;, &quot;10.0.8.0/24&quot; ]\n\n  enable_nat_gateway     = true\n  single_nat_gateway     = true\n  one_nat_gateway_per_az = false\n  enable_dns_hostnames   = true\n  reuse_nat_ips          = true\n  external_nat_ip_ids    = [aws_eip.nat_gw_elastic_ip.id]\n\n  # Adicionando tags necessarias para o EKS\n\n  tags = {\n    &quot;kubernetes.io/cluster/${var.cluster_name}&quot; = &quot;shared&quot;\n  }\n  public_subnet_tags = {\n    &quot;kubernetes.io/cluster/${var.cluster_name}&quot; = &quot;shared&quot;\n    &quot;kubernetes.io/role/elb&quot;                    = &quot;1&quot;\n  }\n  private_subnet_tags = {\n    &quot;kubernetes.io/cluster/${var.cluster_name}&quot; = &quot;shared&quot;\n    &quot;kubernetes.io/role/internal-elb&quot;           = &quot;1&quot;\n  }\n}\n</code></pre>\n<p>valide</p>\n<pre><code>terraform validate\n</code></pre>\n<p>saída esperada</p>\n<pre><code>Success! The configuration is valid.\n</code></pre>\n<h3 id=\"crie-o-manifesto-que-vai-configurar-o-eks\">crie o manifesto que vai configurar o eks</h3>\n<p>crie o arquivo</p>\n<pre><code>vim eks.tf\n</code></pre>\n<p>coloque o conteúdo</p>\n<pre><code># declarando variáveis\n\nvariable &quot;eks_cluster_version&quot; {\n  type        = string\n}\n\nvariable &quot;node_group_default_disk_size&quot; {\n  type        = number\n}\n\nvariable &quot;node_group_default_ami_type&quot; {\n  type        = string\n}\n\nvariable &quot;node_group_desired_capacity&quot; {\n  type        = number\n}\n\nvariable &quot;node_group_max_capacity&quot; {\n  type        = number\n}\n\nvariable &quot;node_group_min_capacity&quot; {\n  type        = number\n}\n\nvariable &quot;node_group_max_unavailable_percentage&quot; {\n  type        = number\n}\n\nvariable &quot;node_group_capacity_type&quot; {\n  type        = string\n}\n\nvariable &quot;node_group_instance_type&quot; {\n  type        = string\n}\n\n\n# dados para configuracao\n\ndata &quot;aws_eks_cluster&quot; &quot;eks&quot; {\n  name = module.eks.cluster_id\n}\n\ndata &quot;aws_eks_cluster_auth&quot; &quot;eks&quot; {\n  name = module.eks.cluster_id\n}\n\n# configurando provider kubernetes\n\nprovider &quot;kubernetes&quot; {\n  host                   = data.aws_eks_cluster.eks.endpoint\n  cluster_ca_certificate = base64decode(data.aws_eks_cluster.eks.certificate_authority[0].data)\n  token                  = data.aws_eks_cluster_auth.eks.token\n}\n\n# configurando eks\n\nmodule &quot;eks&quot; {\n  source          = &quot;terraform-aws-modules/eks/aws&quot;\n\n  cluster_version = var.eks_cluster_version\n  cluster_name    = &quot;${var.cluster_name}&quot;\n\n  subnets = module.vpc.private_subnets\n  vpc_id  = module.vpc.vpc_id\n\n node_groups_defaults = {\n    ami_type  = var.node_group_default_ami_type\n    disk_size = var.node_group_default_disk_size\n  }\n\n  node_groups = {\n    hacka_node_group = {\n      desired_capacity = var.node_group_desired_capacity\n      max_capacity     = var.node_group_max_capacity\n      min_capacity     = var.node_group_min_capacity\n\n      instance_types = [ var.node_group_instance_type ]\n      capacity_type  = var.node_group_capacity_type\n      update_config = {\n        max_unavailable_percentage = var.node_group_max_unavailable_percentage\n      }\n    }\n  }\n\n}\n</code></pre>\n<p>valide</p>\n<pre><code>terraform validate\n</code></pre>\n<p>saída esperada</p>\n<pre><code>Success! The configuration is valid.\n</code></pre>\n<h3 id=\"crie-o-plano-de-instalação\">crie o plano de instalação</h3>\n<p>Use o arquivo configs.tfvars para construir o plano</p>\n<pre><code>terraform plan -out=plan -var-file=configs.tfvars;\n</code></pre>\n<p>saída esperada</p>\n<pre><code>.\n.\n.\n\nPlan: 54 to add, 0 to change, 0 to destroy.\n</code></pre>\n<h3 id=\"aplique-o-plano-criado\">aplique o plano criado</h3>\n<p>vamos aplicar agora</p>\n<pre><code>terraform apply plan\n</code></pre>\n<p>saída esperada</p>\n<pre><code>.\n.\n.\nApply complete! Resources: 54 added, 0 changed, 0 destroyed.\n</code></pre>\n<h3 id=\"validando-o-acesso-ao-cluster\">validando o acesso ao cluster</h3>\n<p>carregue o kubconfig</p>\n<pre><code>export KUBECONFIG=kubeconfig\nkubectl cluster-info\n</code></pre>\n<p>saída esperada</p>\n<pre><code>Kubernetes control plane is running at https://xxxx.gr7.us-east-1.eks.amazonaws.com\nCoreDNS is running at https://xxx.gr7.us-east-1.eks.amazonaws.com/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n\nTo further debug and diagnose cluster problems, use &#39;kubectl cluster-info dump&#39;.\n</code></pre>\n<p>verifique os nodes</p>\n<pre><code>kubectl get nodes\n</code></pre>\n<p>saída esperada</p>\n<pre><code>NAME                        STATUS   ROLES    AGE     VERSION\nip-10-xx-xx-xx.ec2.internal   Ready    &lt;none&gt;   3m11s   v1.21.2-eks-55daa9d\n</code></pre>\n<p>Parece tudo ok!</p>\n<p>Agora vai na AWS e confere VPC, EKS e o restante ;)    </p>\n<h3 id=\"post-install\">post-install</h3>\n<p>Agora precisamos instalar o ingress e o cert-manager, vai lá!</p>\n<ol>\n<li><a href=\"https://gutocarvalho.net/instalando-ingress-aws-no-k8s-eks/\">https://gutocarvalho.net/instalando-ingress-aws-no-k8s-eks/</a></li>\n<li><a href=\"https://gutocarvalho.net/instalando-cert-manager-no-k8s/\">https://gutocarvalho.net/instalando-cert-manager-no-k8s/</a></li>\n</ol>\n<p>Caso precise regerar o kubeconfig</p>\n<ul>\n<li><a href=\"https://gutocarvalho.net/gerando-kubeconfig-para-aws-eks/\">https://gutocarvalho.net/gerando-kubeconfig-para-aws-eks/</a></li>\n</ul>\n<p>Bons estudos!</p>\n<h3 id=\"refs\">refs</h3>\n<ul>\n<li><a href=\"https://registry.terraform.io/modules/terraform-aws-modules/eks/aws/latest\">https://registry.terraform.io/modules/terraform-aws-modules/eks/aws/latest</a></li>\n<li><a href=\"https://github.com/terraform-aws-modules/terraform-aws-eks\">https://github.com/terraform-aws-modules/terraform-aws-eks</a></li>\n<li><a href=\"https://itnext.io/build-an-eks-cluster-with-terraform-d35db8005963\">https://itnext.io/build-an-eks-cluster-with-terraform-d35db8005963</a></li>\n<li><a href=\"https://adamtheautomator.com/terraform-eks-module/\">https://adamtheautomator.com/terraform-eks-module/</a></li>\n<li><a href=\"https://github.com/terraform-aws-modules/terraform-aws-eks/blob/master/docs/iam-permissions.md\">https://github.com/terraform-aws-modules/terraform-aws-eks/blob/master/docs/iam-permissions.md</a></li>\n</ul>\n",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "Drops"
            ],
            "date_published": "2021-10-10T13:54:50-03:00",
            "date_modified": "2021-10-11T07:47:30-03:00"
        },
        {
            "id": "https://gutocarvalho.net/instalando-gitlab-runner-no-ubuntu/",
            "url": "https://gutocarvalho.net/instalando-gitlab-runner-no-ubuntu/",
            "title": "DROPS: Instalando GitLab Runner Dind no Ubuntu",
            "summary": "<p>Aprenda a instalar o gitlab-runner para rodar docker DIND.</p>\n",
            "content_html": "<p>Aprenda a instalar o gitlab-runner para rodar docker DIND.</p>\n\n<p><strong>O que são drops?<br><br></strong>São DUMPs mentais rápidos e rasteiros, simples e objetivos – que funcionam. <br><br>Geralmente eu volto para detalhar mais cada passo – com o devido tempo.<br><br>Considere com a mesma qualidade de um rascunho ou uma anotação rápida.<br><br>De qualquer forma comenta ai qquer coisa, os comentários estão ligados nos DROPS ;)</p>\n<hr>\n<p><strong>Instalando docker no Ubuntu</strong><br><br><code>curl https://releases.rancher.com/install-docker/19.03.sh | sh</code><br><code>systemctl enable docker</code><br><code>systemctl start docker</code><br><br><strong>Instalando o GitLab Runner no Ubuntu</strong><br><br><code>curl -LJO \"https://gitlab-runner-downloads.s3.amazonaws.com/latest/deb/gitlab-runner_amd64.deb\"</code><br><code>dpkg -i gitlab-runner_amd64.deb</code><br><code>systemctl enable gitlab-runner</code><br><code>systemctl start gitlab-runner</code><br><br><strong>Registrando um Runner Docker-in-Docker</strong><br><br><code>gitlab-runner register -n \\</code><br><code>  --url https://gitlab.com/ \\</code><br><code>  --registration-token TOKEN \\</code><br><code>  --description \"Runner Guto 1\" \\</code><br><code>  --tag-list docker \\</code><br><code>  --executor docker \\</code><br><code>  --docker-image \"docker:19.03.12\" \\</code><br><code>  --docker-privileged true \\</code><br><code>  --docker-volumes /var/run/docker.sock:/var/run/docker.sock </code><br><strong><br></strong>Crie quantos runners achar necessário, eu costumo reservar 1 vCPU e 1 GB de RAM para cada Runner.<br><br>Um exemplo, se eu subir 4 runners, a VM vai ter 4 vCPUs + 4 GB de RAM só para os Runners, normalmente deixo mais 1 vCPU + 1 GB pro OS e assim fica tranquilo para cenários bem básicos.</p>\n<p><strong>Configurando a concorrência do gitlab-runner</strong><br><br>edite o arquivo<br><br><code>vim  /etc/gitlab-runner/config.toml</code><br><br>altere o número de runners concorrentes para a quantidade que você criou.<br><br><code>concurrent = 4</code><br><br>reinicie o runner</p>\n<p><code>systemctl restart gitlab-runner</code></p>\n<p>ah, tenha certeza que a instância tem recursos que aguentam a demanda de concorrência, tanto do ponto de vista de memória, quanto de processamento e disco.</p>\n<p>[s]<br>Guto</p>",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "Drops"
            ],
            "date_published": "2021-10-09T18:40:29-03:00",
            "date_modified": "2021-10-11T07:42:11-03:00"
        },
        {
            "id": "https://gutocarvalho.net/mesa-com-regulagem-de-altura-eletrica-brasil/",
            "url": "https://gutocarvalho.net/mesa-com-regulagem-de-altura-eletrica-brasil/",
            "title": "Mesa com regulagem de altura elétrica",
            "summary": "<p>Seguem as opções de standing desk que eu encontrei no Brasil.</p>\n",
            "content_html": "<p>Seguem as opções de standing desk que eu encontrei no Brasil.</p>\n\n<p><br><a href=\"https://slik.com.br/\">https://slik.com.br/</a></p>\n<p><a href=\"https://www.geniodesks.com.br\">https://www.geniodesks.com.br</a><br><br><a href=\"https://baherstore.com.br/produto/mesa-reta\">https://baherstore.com.br/produto/mesa-reta</a><br><br>Melhor custo/beneficio até agora é a Baherstore.<br><br>[s]<br>Guto</p>",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "MindNotes"
            ],
            "date_published": "2021-10-09T07:42:06-03:00",
            "date_modified": "2021-10-09T18:43:08-03:00"
        },
        {
            "id": "https://gutocarvalho.net/iniciando-novo-projeto-nativetrail/",
            "url": "https://gutocarvalho.net/iniciando-novo-projeto-nativetrail/",
            "title": "Iniciando novo projeto solo! ",
            "summary": "<p>Conheça a NativeTrail, novo projeto \"solo\" que estou iniciando.</p>\n",
            "content_html": "<p>Conheça a NativeTrail, novo projeto \"solo\" que estou iniciando.</p>\n\n<p>Pessoal, passando aqui apenas para informar que estou iniciando um novo projeto chamado <a href=\"https://nativetrail.io\" target=\"_blank\" rel=\"noopener noreferrer\">NativeTrail.io</a>, visite o site e conheça os serviços dessa nova consultoria ;)<br><br>[s]<br>Guto</p>",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "Drops"
            ],
            "date_published": "2021-10-09T07:25:21-03:00",
            "date_modified": "2021-10-09T19:25:29-03:00"
        },
        {
            "id": "https://gutocarvalho.net/instalando-rancher-single-node/",
            "url": "https://gutocarvalho.net/instalando-rancher-single-node/",
            "title": "Instalando Rancher Single Node",
            "summary": "<p>Aprenda a instalar o Rancher Single Node para testes e avaliações.</p>\n",
            "content_html": "<p>Aprenda a instalar o Rancher Single Node para testes e avaliações.</p>\n\n<p>Instale o docker<br><br><code>curl https://releases.rancher.com/install-docker/19.03.sh | sh</code></p>\n<p>Crie o diretório de dados para o rancher<br><br><code>mkdir /opt/rabcher-data</code><br><br>Instale o Rancher</p>\n<p><code>docker run -d --restart=unless-stopped \\</code><br><code>  -p 80:80 -p 443:443 \\</code><br><code>  --privileged \\</code><br><code>  -v /opt/rancher-data:/var/lib/rancher \\<br>   rancher/rancher:latest \\</code><br><code>  --acme-domain rancher.nativetrail.io</code></p>\n<p>Acesse</p>\n<p><code><a href=\"https://rancher.nativetrail.io\">https://rancher.nativetrail.io</a></code></p>\n<p>Prontinho!</p>",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "Projetos",
                   "K8S",
                   "Drops"
            ],
            "date_published": "2021-10-07T17:02:01-03:00",
            "date_modified": "2021-10-07T23:03:41-03:00"
        },
        {
            "id": "https://gutocarvalho.net/gerando-kubeconfig-para-aws-eks/",
            "url": "https://gutocarvalho.net/gerando-kubeconfig-para-aws-eks/",
            "title": "K8S: Gerando Kubeconfig para AWS EKS",
            "summary": "<p>Aprenda a gerar o kubeconfig para um cluster EKS</p>\n",
            "content_html": "<p>Aprenda a gerar o kubeconfig para um cluster EKS</p>\n\n<p><strong>Gerando Kubeconfig para AWS EKS</strong><br><br>configurando aws-cli<br><br><code>$ aws configure</code><br>    <br>preencha os dados pedidos<br><br><code>AWS Access Key ID [None]: ACCESS_KEY</code><br><code>AWS Secret Access Key [None]: SECRET_KEY</code><br><code>Default region name [None]: us-east-1</code><br><code>Default output format [None]: json</code><br><br>listando clusters<br><br><code>$ aws eks cluster-list --output table</code><br><br>saída<br><br><code>-----------------------</code><br><code>|    ListClusters     |</code><br><code>+---------------------+</code><br><code>||     clusters      ||</code><br><code>|+-------------------+|</code><br><code>||  homologacao      ||</code><br><code>||  producao         ||</code><br><code>||  desenvolvimento  ||</code><br><code>||  sandbox          ||</code><br><code>|+-------------------+|</code><br><br><br>gerando</p>\n<p><code>$ aws eks update-kubeconfig --name labs</code><br><br>saída<br><br><code>Added new context arn:aws:eks:us-east-1:xxxx:cluster/gr1d-labs to /Users/gutocarvalho/projetos/nativetrail/k8s/labs/config</code><br><br>listando clusters<br><br><code>$ export KUBECONFIG=/Users/gutocarvalho/projetos/nativetrail/k8s/labs/config</code><br><code>$ kubectl get nodes</code><br><br>saída<br><br><code>NAME                            STATUS   ROLES    AGE   VERSION</code><br><code>ip-172-xx-xx-11.ec2.internal     Ready    &lt;none&gt;   24m   v1.21.2-eks-55daa9d</code><br><code>ip-172-xx-xx-168.ec2.internal    Ready    &lt;none&gt;   24m   v1.21.2-eks-55daa9d</code><br><code>ip-172-xx-xx-198.ec2.internal    Ready    &lt;none&gt;   24m   v1.21.2-eks-55daa9d</code><br><br>prontinho!</p>",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "K8S",
                   "Drops"
            ],
            "date_published": "2021-10-06T12:05:34-03:00",
            "date_modified": "2021-10-06T15:22:21-03:00"
        },
        {
            "id": "https://gutocarvalho.net/instalando-ingress-aws-no-k8s-eks/",
            "url": "https://gutocarvalho.net/instalando-ingress-aws-no-k8s-eks/",
            "title": "K8S: Instalando ingress AWS no EKS",
            "summary": "<p>Aprenda a instalar o ingress-aws no EKS de forma rápida e pontual</p>\n",
            "content_html": "<p>Aprenda a instalar o ingress-aws no EKS de forma rápida e pontual</p>\n\n<p>É importante saber que o cluster EKS não vem com ingress instalado por padrão, então vamos aprender como instalar o INGRESS oficial do projeto do K8S com suporte a ELB e NLB da AWS.<br><br><strong>Instalando Ingress no EKS</strong><br><br>Aqui nesta página teremos a documentação para instalar o ingress<br><br><code>https://kubernetes.github.io/ingress-nginx/deploy/#aws</code><br><br>Instale a última versão estável<br><br><code>$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.3/deploy/static/provider/aws/deploy.yaml</code><br><br>A saída esperada é essa:<br><br><code>namespace/ingress-nginx created</code><br><code>serviceaccount/ingress-nginx created</code><br><code>configmap/ingress-nginx-controller created</code><br><code>clusterrole.rbac.authorization.k8s.io/ingress-nginx created</code><br><code>clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx created</code><br><code>role.rbac.authorization.k8s.io/ingress-nginx created</code><br><code>rolebinding.rbac.authorization.k8s.io/ingress-nginx created</code><br><code>service/ingress-nginx-controller-admission created</code><br><code>service/ingress-nginx-controller created</code><br><code>deployment.apps/ingress-nginx-controller created</code><br><code>ingressclass.networking.k8s.io/nginx created</code><br><code>validatingwebhookconfiguration.admissionregistration.k8s.io/ingress-nginx-admission created</code><br><code>serviceaccount/ingress-nginx-admission created</code><br><code>clusterrole.rbac.authorization.k8s.io/ingress-nginx-admission created</code><br><code>clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created</code><br><code>role.rbac.authorization.k8s.io/ingress-nginx-admission created</code><br><code>rolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created</code><br><code>job.batch/ingress-nginx-admission-create created</code><br><code>job.batch/ingress-nginx-admission-patch created</code><br><br>Prontinho!</p>",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "Projetos",
                   "K8S",
                   "Drops"
            ],
            "date_published": "2021-10-05T20:01:27-03:00",
            "date_modified": "2021-10-06T15:22:35-03:00"
        },
        {
            "id": "https://gutocarvalho.net/instalando-cert-manager-no-k8s/",
            "url": "https://gutocarvalho.net/instalando-cert-manager-no-k8s/",
            "title": "K8S: Instalando Cert-Manager e issuers LetsEncrypt",
            "summary": "<p>Aprenda a instalar ao cert-manager no k8s de forma objetiva e rápida!</p>\n",
            "content_html": "<p>Aprenda a instalar ao cert-manager no k8s de forma objetiva e rápida!</p>\n\n<p><strong>Instalando CertManager</strong><br><br>Instale o CustomResourceDefinition separadamente<br><br><code>$ kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.5.4/cert-manager.crds.yaml</code><br><br>Crie o namespace para o cert-manager<br><br><code>$ kubectl create namespace cert-manager</code><br><br>Adicione o repositório helm<br><br><code>$ helm repo add jetstack https://charts.jetstack.io</code><br><br>Atualize os indices do helm<br><br><code>$ helm repo update</code><br><br>Instale o cert-manager via helm<br><br><code>$ helm install \\</code><br><code>  cert-manager jetstack/cert-manager \\</code><br><code>  --namespace cert-manager \\</code><br><code>  --version v1.5.4</code><br><br>Crie o issuer para letsencrypt production<br><br><code>$ vim issuer-prod.yaml</code><br><br>Insira o conteúdo<br><br><code>apiVersion: cert-manager.io/v1</code><br><code>kind: ClusterIssuer</code><br><code>metadata:</code><br><code>  name: letsencrypt-prod</code><br><code>spec:</code><br><code>  acme:</code><br><code>    # You must replace this email address with your own.</code><br><code>    # Let's Encrypt will use this to contact you about expiring</code><br><code>    # certificates, and issues related to your account.</code><br><code>    email: certmanager@gutocarvalho.net</code><br><code>    server: https://acme-v02.api.letsencrypt.org/directory</code><br><code>    privateKeySecretRef:</code><br><code>      # Secret resource that will be used to store the account's private key.</code><br><code>      name: letsencrypt-production</code><br><code>    # Add a single challenge solver, HTTP01 using nginx</code><br><code>    solvers:</code><br><code>    - http01:</code><br><code>        ingress:</code><br><code>          class: nginx</code><br><br>Aplicando<br><br><code>$ kubectl create -f issuer-prod.yaml</code><br><br>Criando o issuer para letsencrypt staging<br><br><code>vim issuer-staging.yaml</code><br><br>Insira o conteúdo<br><br><code>apiVersion: cert-manager.io/v1</code><br><code>kind: ClusterIssuer</code><br><code>metadata:</code><br><code>  name: letsencrypt-staging</code><br><code>spec:</code><br><code>  acme:</code><br><code>    # You must replace this email address with your own.</code><br><code>    # Let's Encrypt will use this to contact you about expiring</code><br><code>    # certificates, and issues related to your account.</code><br><code>    email: nativetrail@gutocarvalho.net</code><br><code>    server: https://acme-staging-v02.api.letsencrypt.org/directory</code><br><code>    privateKeySecretRef:</code><br><code>      # Secret resource that will be used to store the account's private key.</code><br><code>      name: letsencrypt-staging</code><br><code>    # Add a single challenge solver, HTTP01 using nginx</code><br><code>    solvers:</code><br><code>    - http01:</code><br><code>        ingress:</code><br><code>          class: nginx</code><br><br>Aplicando<br><br><code>$ kubectl create -f issuer-staging.yaml</code><br><br>Prontinho!<br><br><strong>Annotations</strong><br><br>Para production<br><br><code>cert-manager.io/cluster-issuer=letsencrypt-prod</code><br><code>kubernetes.io/ingress.class=nginx</code><br><br>Para staging<br><br><code>cert-manager.io/cluster-issuer=letsencrypt-staging</code><br><code>kubernetes.io/ingress.class=nginx</code><br><br><strong>Refs</strong><br><br><code>https://cert-manager.io/docs/configuration/acme/</code></p>",
            "author": {
                "name": "Guto Carvalho"
            },
            "tags": [
                   "Projetos",
                   "K8S",
                   "Drops"
            ],
            "date_published": "2021-10-05T19:58:00-03:00",
            "date_modified": "2021-10-06T15:23:53-03:00"
        }
    ]
}
